{
    "swagger": "2.0",
    "info": {
        "title": "aeonv1",
        "version": "1.0.0",
        "contact": {
            "email": "aeonv1-no-reply@bubbleapps.io",
            "url": "https://app.project-aeon.com"
        }
    },
    "host": "app.project-aeon.com",
    "basePath": "/version-test/api/1.1",
    "schemes": [
        "https"
    ],
    "consumes": [
        "application/json"
    ],
    "paths": {
        "/wf/update_usersnap": {
            "post": {
                "description": "Triggers the workflow update_usersnap",
                "parameters": [
                    {
                        "name": "update_usersnap request body",
                        "in": "body",
                        "description": "Body of the POST request",
                        "schema": {
                            "$ref": "#/definitions/update_usersnapBody"
                        }
                    }
                ],
                "tags": [
                    "Workflow"
                ],
                "responses": {
                    "200": {
                        "description": "Workflow response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Outcome of the workflow"
                                },
                                "response": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Workflow failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Outcome of the workflow"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the workflow"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                },
                "security": []
            }
        },
        "/wf/check_request": {
            "post": {
                "description": "Triggers the workflow check_request",
                "parameters": [
                    {
                        "name": "check_request request body",
                        "in": "body",
                        "description": "Body of the POST request",
                        "schema": {
                            "$ref": "#/definitions/check_requestBody"
                        }
                    }
                ],
                "tags": [
                    "Workflow"
                ],
                "responses": {
                    "200": {
                        "description": "Workflow response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Outcome of the workflow"
                                },
                                "response": {
                                    "type": "object",
                                    "properties": {
                                        "validated": {
                                            "type": "boolean"
                                        },
                                        "reason": {
                                            "type": "string"
                                        },
                                        "pages (db)": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "description": "⚙️marketingpage ('⚙️marketingpage' represented by a unique ID)"
                                            }
                                        },
                                        "page-slug": {
                                            "type": "string"
                                        },
                                        "file names": {
                                            "type": "string"
                                        },
                                        "image names": {
                                            "type": "string"
                                        },
                                        "file urls": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "image urls": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "bubble pages ": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "Page builder core file names": {
                                            "type": "string"
                                        },
                                        "Page builder core image names": {
                                            "type": "string"
                                        },
                                        "Page builder core file urls": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "Page builder core image urls": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "Page builder versions": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Workflow failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Outcome of the workflow"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the workflow"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                },
                "security": []
            }
        },
        "/wf/update_page": {
            "post": {
                "description": "Triggers the workflow update_page",
                "parameters": [
                    {
                        "name": "update_page request body",
                        "in": "body",
                        "description": "Body of the POST request",
                        "schema": {
                            "$ref": "#/definitions/update_pageBody"
                        }
                    }
                ],
                "tags": [
                    "Workflow"
                ],
                "responses": {
                    "200": {
                        "description": "Workflow response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Outcome of the workflow"
                                },
                                "response": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Workflow failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Outcome of the workflow"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the workflow"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                },
                "security": []
            }
        },
        "/wf/record_registration": {
            "post": {
                "description": "Triggers the workflow record_registration",
                "parameters": [
                    {
                        "name": "record_registration request body",
                        "in": "body",
                        "description": "Body of the POST request",
                        "schema": {
                            "$ref": "#/definitions/record_registrationBody"
                        }
                    }
                ],
                "tags": [
                    "Workflow"
                ],
                "responses": {
                    "200": {
                        "description": "Workflow response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Outcome of the workflow"
                                },
                                "response": {
                                    "type": "object",
                                    "properties": {
                                        "template-version": {
                                            "type": "string"
                                        },
                                        "private-token": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Workflow failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Outcome of the workflow"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the workflow"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                },
                "security": []
            }
        },
        "/wf/upload_image": {
            "post": {
                "description": "Triggers the workflow upload_image",
                "parameters": [
                    {
                        "name": "upload_image request body",
                        "in": "body",
                        "description": "Body of the POST request",
                        "schema": {
                            "$ref": "#/definitions/upload_imageBody"
                        }
                    }
                ],
                "tags": [
                    "Workflow"
                ],
                "responses": {
                    "200": {
                        "description": "Workflow response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Outcome of the workflow"
                                },
                                "response": {
                                    "type": "object",
                                    "properties": {
                                        "url": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Workflow failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Outcome of the workflow"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the workflow"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                },
                "security": []
            }
        },
        "/wf/send_email_template": {
            "post": {
                "description": "Triggers the workflow send_email_template",
                "parameters": [
                    {
                        "name": "send_email_template request body",
                        "in": "body",
                        "description": "Body of the POST request",
                        "schema": {
                            "$ref": "#/definitions/send_email_templateBody"
                        }
                    }
                ],
                "tags": [
                    "Workflow"
                ],
                "responses": {
                    "200": {
                        "description": "Workflow response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Outcome of the workflow"
                                },
                                "response": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Workflow failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Outcome of the workflow"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the workflow"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/wf/upload_files": {
            "post": {
                "description": "Triggers the workflow upload_files",
                "parameters": [
                    {
                        "name": "upload_files request body",
                        "in": "body",
                        "description": "Body of the POST request",
                        "schema": {
                            "$ref": "#/definitions/upload_filesBody"
                        }
                    }
                ],
                "tags": [
                    "Workflow"
                ],
                "responses": {
                    "200": {
                        "description": "Workflow response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Outcome of the workflow"
                                },
                                "response": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "file URLs": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "file names": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "image URLs": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "image names": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "core file URLs": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "core file names": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "core image URLs": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "core image names": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "page builder version names": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "core files not saved": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Workflow failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Outcome of the workflow"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the workflow"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                },
                "security": []
            }
        },
        "/wf/check_app_location": {
            "post": {
                "description": "Triggers the workflow check_app_location",
                "parameters": [
                    {
                        "name": "check_app_location request body",
                        "in": "body",
                        "description": "Body of the POST request",
                        "schema": {
                            "$ref": "#/definitions/check_app_locationBody"
                        }
                    }
                ],
                "tags": [
                    "Workflow"
                ],
                "responses": {
                    "200": {
                        "description": "Workflow response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Outcome of the workflow"
                                },
                                "response": {
                                    "type": "object",
                                    "properties": {
                                        "valid": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Workflow failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Outcome of the workflow"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the workflow"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                },
                "security": []
            }
        },
        "/wf/verify_check": {
            "post": {
                "description": "Triggers the workflow verify_check",
                "parameters": [
                    {
                        "name": "verify_check request body",
                        "in": "body",
                        "description": "Body of the POST request",
                        "schema": {
                            "$ref": "#/definitions/verify_checkBody"
                        }
                    }
                ],
                "tags": [
                    "Workflow"
                ],
                "responses": {
                    "200": {
                        "description": "Workflow response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Outcome of the workflow"
                                },
                                "response": {
                                    "type": "object",
                                    "properties": {
                                        "valid": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Workflow failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Outcome of the workflow"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the workflow"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/wf/videorendered": {
            "post": {
                "description": "Triggers the workflow videorendered",
                "parameters": [
                    {
                        "name": "video_uid",
                        "in": "query",
                        "description": "Query parameter video_uid",
                        "required": true,
                        "type": {
                            "type": "string",
                            "description": "visualtemplates ('visualtemplates' represented by a unique ID)"
                        }
                    }
                ],
                "tags": [
                    "Workflow"
                ],
                "responses": {
                    "200": {
                        "description": "Workflow response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Outcome of the workflow"
                                },
                                "response": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Workflow failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Outcome of the workflow"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the workflow"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                },
                "security": []
            }
        },
        "/wf/render": {
            "post": {
                "description": "Triggers the workflow render",
                "parameters": [
                    {
                        "name": "render request body",
                        "in": "body",
                        "description": "Body of the POST request",
                        "schema": {
                            "$ref": "#/definitions/renderBody"
                        }
                    }
                ],
                "tags": [
                    "Workflow"
                ],
                "responses": {
                    "200": {
                        "description": "Workflow response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Outcome of the workflow"
                                },
                                "response": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Workflow failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Outcome of the workflow"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the workflow"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/wf/verify_send": {
            "post": {
                "description": "Triggers the workflow verify_send",
                "parameters": [
                    {
                        "name": "verify_send request body",
                        "in": "body",
                        "description": "Body of the POST request",
                        "schema": {
                            "$ref": "#/definitions/verify_sendBody"
                        }
                    }
                ],
                "tags": [
                    "Workflow"
                ],
                "responses": {
                    "200": {
                        "description": "Workflow response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Outcome of the workflow"
                                },
                                "response": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Workflow failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Outcome of the workflow"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the workflow"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/wf/duplicate_video_from_api": {
            "post": {
                "description": "Triggers the workflow duplicate_video_from_api",
                "parameters": [
                    {
                        "name": "duplicate_video_from_api request body",
                        "in": "body",
                        "description": "Body of the POST request",
                        "schema": {
                            "$ref": "#/definitions/duplicate_video_from_apiBody"
                        }
                    }
                ],
                "tags": [
                    "Workflow"
                ],
                "responses": {
                    "200": {
                        "description": "Workflow response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Outcome of the workflow"
                                },
                                "response": {
                                    "type": "object",
                                    "properties": {
                                        "target_video": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Workflow failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Outcome of the workflow"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the workflow"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/wf/send_xml_results": {
            "post": {
                "description": "Triggers the workflow send_xml_results",
                "parameters": [
                    {
                        "name": "send_xml_results request body",
                        "in": "body",
                        "description": "Body of the POST request",
                        "schema": {
                            "$ref": "#/definitions/send_xml_resultsBody"
                        }
                    }
                ],
                "tags": [
                    "Workflow"
                ],
                "responses": {
                    "200": {
                        "description": "Workflow response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Outcome of the workflow"
                                },
                                "response": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Workflow failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Outcome of the workflow"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the workflow"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/wf/delete-video": {
            "post": {
                "description": "Triggers the workflow delete-video",
                "parameters": [
                    {
                        "name": "delete-video request body",
                        "in": "body",
                        "description": "Body of the POST request",
                        "schema": {
                            "$ref": "#/definitions/delete-videoBody"
                        }
                    }
                ],
                "tags": [
                    "Workflow"
                ],
                "responses": {
                    "200": {
                        "description": "Workflow response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Outcome of the workflow"
                                },
                                "response": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Workflow failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Outcome of the workflow"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the workflow"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/wf/gen-presigned-goog-url": {
            "post": {
                "description": "Triggers the workflow gen-presigned-goog-url",
                "parameters": [
                    {
                        "name": "gen-presigned-goog-url request body",
                        "in": "body",
                        "description": "Body of the POST request",
                        "schema": {
                            "$ref": "#/definitions/gen-presigned-goog-urlBody"
                        }
                    }
                ],
                "tags": [
                    "Workflow"
                ],
                "responses": {
                    "200": {
                        "description": "Workflow response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Outcome of the workflow"
                                },
                                "response": {
                                    "type": "object",
                                    "properties": {
                                        "signed_path": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Workflow failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Outcome of the workflow"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the workflow"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/wf/get_aspect_ratios": {
            "get": {
                "description": "Triggers the workflow get_aspect_ratios",
                "parameters": [],
                "tags": [
                    "Workflow"
                ],
                "responses": {
                    "200": {
                        "description": "Workflow response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Outcome of the workflow"
                                },
                                "response": {
                                    "type": "object",
                                    "properties": {
                                        "aspect_ratio_list": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Workflow failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Outcome of the workflow"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the workflow"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/wf/getty-refresh-token": {
            "post": {
                "description": "Triggers the workflow getty-refresh-token",
                "parameters": [
                    {
                        "name": "getty-refresh-token request body",
                        "in": "body",
                        "description": "Body of the POST request",
                        "schema": {
                            "$ref": "#/definitions/getty-refresh-tokenBody"
                        }
                    }
                ],
                "tags": [
                    "Workflow"
                ],
                "responses": {
                    "200": {
                        "description": "Workflow response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Outcome of the workflow"
                                },
                                "response": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Workflow failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Outcome of the workflow"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the workflow"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/wf/getty-access-token": {
            "post": {
                "description": "Triggers the workflow getty-access-token",
                "parameters": [
                    {
                        "name": "getty-access-token request body",
                        "in": "body",
                        "description": "Body of the POST request",
                        "schema": {
                            "$ref": "#/definitions/getty-access-tokenBody"
                        }
                    }
                ],
                "tags": [
                    "Workflow"
                ],
                "responses": {
                    "200": {
                        "description": "Workflow response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Outcome of the workflow"
                                },
                                "response": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Workflow failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Outcome of the workflow"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the workflow"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/wf/credits_purchased": {
            "post": {
                "description": "Triggers the workflow credits_purchased",
                "parameters": [
                    {
                        "name": "credits_purchased request body",
                        "in": "body",
                        "description": "Body of the POST request",
                        "schema": {
                            "$ref": "#/definitions/credits_purchasedBody"
                        }
                    }
                ],
                "tags": [
                    "Workflow"
                ],
                "responses": {
                    "200": {
                        "description": "Workflow response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Outcome of the workflow"
                                },
                                "response": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Workflow failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Outcome of the workflow"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the workflow"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                },
                "security": []
            }
        },
        "/obj/brandguidelines/{UniqueID}": {
            "get": {
                "description": "Retrieve a thing of type brandguidelines by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the brandguidelines to retrieve",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved brandguidelines",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "$ref": "#/definitions/brandguidelines"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "description": "Modifies a thing of type brandguidelines by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the brandguidelines to modify",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "brandguidelines request body",
                        "in": "body",
                        "description": "Body of the PATCH request",
                        "schema": {
                            "$ref": "#/definitions/brandguidelinesBody"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Modified brandguidelines"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Replaces a thing of type brandguidelines by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the brandguidelines to replace",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "brandguidelines request body",
                        "in": "body",
                        "description": "Body of the PUT request",
                        "schema": {
                            "$ref": "#/definitions/brandguidelinesBody"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Replaced brandguidelines"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a thing of type brandguidelines by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the brandguidelines to delete",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Replaced brandguidelines"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/obj/brandguidelines": {
            "get": {
                "description": "Retrieve a list of things of type brandguidelines with some optional search constraints. Retrieves 100 items at most at once.",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items to fetch (maximum is 100)",
                        "type": "integer",
                        "format": "int32",
                        "default": 50
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "description": "Position to start from in the list",
                        "type": "integer",
                        "format": "int32",
                        "default": 0
                    },
                    {
                        "name": "sort_field",
                        "in": "query",
                        "description": "Field to sort the list on",
                        "type": "string"
                    },
                    {
                        "name": "descending",
                        "in": "query",
                        "description": "Sorting type: descending or ascending",
                        "type": "boolean"
                    },
                    {
                        "name": "constraints",
                        "in": "query",
                        "description": "Search constraints, stringified array as described [here](https://manual.bubble.io/core-resources/api/data-api#search-constraints)",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved list of brandguidelines",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/brandguidelines"
                                            }
                                        },
                                        "cursor": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Rank of the first item in the list"
                                        },
                                        "count": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Number of items in the current response. It is the minimum between the actual length of the list and the sent limit (or 100 if you did not specify a limit)."
                                        },
                                        "remaining": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Number of remaining items after the current response. Useful to fetch more items."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new thing of type brandguidelines",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "brandguidelines request body",
                        "in": "body",
                        "description": "Body of the POST request",
                        "schema": {
                            "$ref": "#/definitions/brandguidelinesBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created one thing of type brandguidelines",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Success status of the operation"
                                },
                                "id": {
                                    "type": "string",
                                    "description": "Unique id of the newly created object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/obj/comfyui_custom/{UniqueID}": {
            "get": {
                "description": "Retrieve a thing of type comfyui_custom by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the comfyui_custom to retrieve",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved comfyui_custom",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "$ref": "#/definitions/comfyui_custom"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "description": "Modifies a thing of type comfyui_custom by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the comfyui_custom to modify",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "comfyui_custom request body",
                        "in": "body",
                        "description": "Body of the PATCH request",
                        "schema": {
                            "$ref": "#/definitions/comfyui_customBody"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Modified comfyui_custom"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Replaces a thing of type comfyui_custom by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the comfyui_custom to replace",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "comfyui_custom request body",
                        "in": "body",
                        "description": "Body of the PUT request",
                        "schema": {
                            "$ref": "#/definitions/comfyui_customBody"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Replaced comfyui_custom"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a thing of type comfyui_custom by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the comfyui_custom to delete",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Replaced comfyui_custom"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/obj/comfyui_custom": {
            "get": {
                "description": "Retrieve a list of things of type comfyui_custom with some optional search constraints. Retrieves 100 items at most at once.",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items to fetch (maximum is 100)",
                        "type": "integer",
                        "format": "int32",
                        "default": 50
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "description": "Position to start from in the list",
                        "type": "integer",
                        "format": "int32",
                        "default": 0
                    },
                    {
                        "name": "sort_field",
                        "in": "query",
                        "description": "Field to sort the list on",
                        "type": "string"
                    },
                    {
                        "name": "descending",
                        "in": "query",
                        "description": "Sorting type: descending or ascending",
                        "type": "boolean"
                    },
                    {
                        "name": "constraints",
                        "in": "query",
                        "description": "Search constraints, stringified array as described [here](https://manual.bubble.io/core-resources/api/data-api#search-constraints)",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved list of comfyui_customs",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/comfyui_custom"
                                            }
                                        },
                                        "cursor": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Rank of the first item in the list"
                                        },
                                        "count": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Number of items in the current response. It is the minimum between the actual length of the list and the sent limit (or 100 if you did not specify a limit)."
                                        },
                                        "remaining": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Number of remaining items after the current response. Useful to fetch more items."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new thing of type comfyui_custom",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "comfyui_custom request body",
                        "in": "body",
                        "description": "Body of the POST request",
                        "schema": {
                            "$ref": "#/definitions/comfyui_customBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created one thing of type comfyui_custom",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Success status of the operation"
                                },
                                "id": {
                                    "type": "string",
                                    "description": "Unique id of the newly created object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/obj/comfyui_workflow/{UniqueID}": {
            "get": {
                "description": "Retrieve a thing of type comfyui_workflow by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the comfyui_workflow to retrieve",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved comfyui_workflow",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "$ref": "#/definitions/comfyui_workflow"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "description": "Modifies a thing of type comfyui_workflow by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the comfyui_workflow to modify",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "comfyui_workflow request body",
                        "in": "body",
                        "description": "Body of the PATCH request",
                        "schema": {
                            "$ref": "#/definitions/comfyui_workflowBody"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Modified comfyui_workflow"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Replaces a thing of type comfyui_workflow by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the comfyui_workflow to replace",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "comfyui_workflow request body",
                        "in": "body",
                        "description": "Body of the PUT request",
                        "schema": {
                            "$ref": "#/definitions/comfyui_workflowBody"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Replaced comfyui_workflow"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a thing of type comfyui_workflow by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the comfyui_workflow to delete",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Replaced comfyui_workflow"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/obj/comfyui_workflow": {
            "get": {
                "description": "Retrieve a list of things of type comfyui_workflow with some optional search constraints. Retrieves 100 items at most at once.",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items to fetch (maximum is 100)",
                        "type": "integer",
                        "format": "int32",
                        "default": 50
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "description": "Position to start from in the list",
                        "type": "integer",
                        "format": "int32",
                        "default": 0
                    },
                    {
                        "name": "sort_field",
                        "in": "query",
                        "description": "Field to sort the list on",
                        "type": "string"
                    },
                    {
                        "name": "descending",
                        "in": "query",
                        "description": "Sorting type: descending or ascending",
                        "type": "boolean"
                    },
                    {
                        "name": "constraints",
                        "in": "query",
                        "description": "Search constraints, stringified array as described [here](https://manual.bubble.io/core-resources/api/data-api#search-constraints)",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved list of comfyui_workflows",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/comfyui_workflow"
                                            }
                                        },
                                        "cursor": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Rank of the first item in the list"
                                        },
                                        "count": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Number of items in the current response. It is the minimum between the actual length of the list and the sent limit (or 100 if you did not specify a limit)."
                                        },
                                        "remaining": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Number of remaining items after the current response. Useful to fetch more items."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new thing of type comfyui_workflow",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "comfyui_workflow request body",
                        "in": "body",
                        "description": "Body of the POST request",
                        "schema": {
                            "$ref": "#/definitions/comfyui_workflowBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created one thing of type comfyui_workflow",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Success status of the operation"
                                },
                                "id": {
                                    "type": "string",
                                    "description": "Unique id of the newly created object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/obj/elevenlabslibrary/{UniqueID}": {
            "get": {
                "description": "Retrieve a thing of type elevenlabslibrary by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the elevenlabslibrary to retrieve",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved elevenlabslibrary",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "$ref": "#/definitions/elevenlabslibrary"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "description": "Modifies a thing of type elevenlabslibrary by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the elevenlabslibrary to modify",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "elevenlabslibrary request body",
                        "in": "body",
                        "description": "Body of the PATCH request",
                        "schema": {
                            "$ref": "#/definitions/elevenlabslibraryBody"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Modified elevenlabslibrary"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Replaces a thing of type elevenlabslibrary by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the elevenlabslibrary to replace",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "elevenlabslibrary request body",
                        "in": "body",
                        "description": "Body of the PUT request",
                        "schema": {
                            "$ref": "#/definitions/elevenlabslibraryBody"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Replaced elevenlabslibrary"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a thing of type elevenlabslibrary by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the elevenlabslibrary to delete",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Replaced elevenlabslibrary"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/obj/elevenlabslibrary": {
            "get": {
                "description": "Retrieve a list of things of type elevenlabslibrary with some optional search constraints. Retrieves 100 items at most at once.",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items to fetch (maximum is 100)",
                        "type": "integer",
                        "format": "int32",
                        "default": 50
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "description": "Position to start from in the list",
                        "type": "integer",
                        "format": "int32",
                        "default": 0
                    },
                    {
                        "name": "sort_field",
                        "in": "query",
                        "description": "Field to sort the list on",
                        "type": "string"
                    },
                    {
                        "name": "descending",
                        "in": "query",
                        "description": "Sorting type: descending or ascending",
                        "type": "boolean"
                    },
                    {
                        "name": "constraints",
                        "in": "query",
                        "description": "Search constraints, stringified array as described [here](https://manual.bubble.io/core-resources/api/data-api#search-constraints)",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved list of elevenlabslibraries",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/elevenlabslibrary"
                                            }
                                        },
                                        "cursor": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Rank of the first item in the list"
                                        },
                                        "count": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Number of items in the current response. It is the minimum between the actual length of the list and the sent limit (or 100 if you did not specify a limit)."
                                        },
                                        "remaining": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Number of remaining items after the current response. Useful to fetch more items."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new thing of type elevenlabslibrary",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "elevenlabslibrary request body",
                        "in": "body",
                        "description": "Body of the POST request",
                        "schema": {
                            "$ref": "#/definitions/elevenlabslibraryBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created one thing of type elevenlabslibrary",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Success status of the operation"
                                },
                                "id": {
                                    "type": "string",
                                    "description": "Unique id of the newly created object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/obj/elevenlabs_setting/{UniqueID}": {
            "get": {
                "description": "Retrieve a thing of type elevenlabs_setting by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the elevenlabs_setting to retrieve",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved elevenlabs_setting",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "$ref": "#/definitions/elevenlabs_setting"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "description": "Modifies a thing of type elevenlabs_setting by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the elevenlabs_setting to modify",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "elevenlabs_setting request body",
                        "in": "body",
                        "description": "Body of the PATCH request",
                        "schema": {
                            "$ref": "#/definitions/elevenlabs_settingBody"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Modified elevenlabs_setting"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Replaces a thing of type elevenlabs_setting by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the elevenlabs_setting to replace",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "elevenlabs_setting request body",
                        "in": "body",
                        "description": "Body of the PUT request",
                        "schema": {
                            "$ref": "#/definitions/elevenlabs_settingBody"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Replaced elevenlabs_setting"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a thing of type elevenlabs_setting by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the elevenlabs_setting to delete",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Replaced elevenlabs_setting"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/obj/elevenlabs_setting": {
            "get": {
                "description": "Retrieve a list of things of type elevenlabs_setting with some optional search constraints. Retrieves 100 items at most at once.",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items to fetch (maximum is 100)",
                        "type": "integer",
                        "format": "int32",
                        "default": 50
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "description": "Position to start from in the list",
                        "type": "integer",
                        "format": "int32",
                        "default": 0
                    },
                    {
                        "name": "sort_field",
                        "in": "query",
                        "description": "Field to sort the list on",
                        "type": "string"
                    },
                    {
                        "name": "descending",
                        "in": "query",
                        "description": "Sorting type: descending or ascending",
                        "type": "boolean"
                    },
                    {
                        "name": "constraints",
                        "in": "query",
                        "description": "Search constraints, stringified array as described [here](https://manual.bubble.io/core-resources/api/data-api#search-constraints)",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved list of elevenlabs_settings",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/elevenlabs_setting"
                                            }
                                        },
                                        "cursor": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Rank of the first item in the list"
                                        },
                                        "count": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Number of items in the current response. It is the minimum between the actual length of the list and the sent limit (or 100 if you did not specify a limit)."
                                        },
                                        "remaining": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Number of remaining items after the current response. Useful to fetch more items."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new thing of type elevenlabs_setting",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "elevenlabs_setting request body",
                        "in": "body",
                        "description": "Body of the POST request",
                        "schema": {
                            "$ref": "#/definitions/elevenlabs_settingBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created one thing of type elevenlabs_setting",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Success status of the operation"
                                },
                                "id": {
                                    "type": "string",
                                    "description": "Unique id of the newly created object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/obj/oauth/{UniqueID}": {
            "get": {
                "description": "Retrieve a thing of type oauth by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the oauth to retrieve",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved oauth",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "$ref": "#/definitions/oauth"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "description": "Modifies a thing of type oauth by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the oauth to modify",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "oauth request body",
                        "in": "body",
                        "description": "Body of the PATCH request",
                        "schema": {
                            "$ref": "#/definitions/oauthBody"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Modified oauth"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Replaces a thing of type oauth by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the oauth to replace",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "oauth request body",
                        "in": "body",
                        "description": "Body of the PUT request",
                        "schema": {
                            "$ref": "#/definitions/oauthBody"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Replaced oauth"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a thing of type oauth by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the oauth to delete",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Replaced oauth"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/obj/oauth": {
            "get": {
                "description": "Retrieve a list of things of type oauth with some optional search constraints. Retrieves 100 items at most at once.",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items to fetch (maximum is 100)",
                        "type": "integer",
                        "format": "int32",
                        "default": 50
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "description": "Position to start from in the list",
                        "type": "integer",
                        "format": "int32",
                        "default": 0
                    },
                    {
                        "name": "sort_field",
                        "in": "query",
                        "description": "Field to sort the list on",
                        "type": "string"
                    },
                    {
                        "name": "descending",
                        "in": "query",
                        "description": "Sorting type: descending or ascending",
                        "type": "boolean"
                    },
                    {
                        "name": "constraints",
                        "in": "query",
                        "description": "Search constraints, stringified array as described [here](https://manual.bubble.io/core-resources/api/data-api#search-constraints)",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved list of oauths",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/oauth"
                                            }
                                        },
                                        "cursor": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Rank of the first item in the list"
                                        },
                                        "count": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Number of items in the current response. It is the minimum between the actual length of the list and the sent limit (or 100 if you did not specify a limit)."
                                        },
                                        "remaining": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Number of remaining items after the current response. Useful to fetch more items."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new thing of type oauth",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "oauth request body",
                        "in": "body",
                        "description": "Body of the POST request",
                        "schema": {
                            "$ref": "#/definitions/oauthBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created one thing of type oauth",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Success status of the operation"
                                },
                                "id": {
                                    "type": "string",
                                    "description": "Unique id of the newly created object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/obj/orpheus_library/{UniqueID}": {
            "get": {
                "description": "Retrieve a thing of type orpheus_library by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the orpheus_library to retrieve",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved orpheus_library",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "$ref": "#/definitions/orpheus_library"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "description": "Modifies a thing of type orpheus_library by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the orpheus_library to modify",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "orpheus_library request body",
                        "in": "body",
                        "description": "Body of the PATCH request",
                        "schema": {
                            "$ref": "#/definitions/orpheus_libraryBody"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Modified orpheus_library"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Replaces a thing of type orpheus_library by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the orpheus_library to replace",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "orpheus_library request body",
                        "in": "body",
                        "description": "Body of the PUT request",
                        "schema": {
                            "$ref": "#/definitions/orpheus_libraryBody"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Replaced orpheus_library"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a thing of type orpheus_library by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the orpheus_library to delete",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Replaced orpheus_library"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/obj/orpheus_library": {
            "get": {
                "description": "Retrieve a list of things of type orpheus_library with some optional search constraints. Retrieves 100 items at most at once.",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items to fetch (maximum is 100)",
                        "type": "integer",
                        "format": "int32",
                        "default": 50
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "description": "Position to start from in the list",
                        "type": "integer",
                        "format": "int32",
                        "default": 0
                    },
                    {
                        "name": "sort_field",
                        "in": "query",
                        "description": "Field to sort the list on",
                        "type": "string"
                    },
                    {
                        "name": "descending",
                        "in": "query",
                        "description": "Sorting type: descending or ascending",
                        "type": "boolean"
                    },
                    {
                        "name": "constraints",
                        "in": "query",
                        "description": "Search constraints, stringified array as described [here](https://manual.bubble.io/core-resources/api/data-api#search-constraints)",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved list of orpheus_libraries",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/orpheus_library"
                                            }
                                        },
                                        "cursor": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Rank of the first item in the list"
                                        },
                                        "count": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Number of items in the current response. It is the minimum between the actual length of the list and the sent limit (or 100 if you did not specify a limit)."
                                        },
                                        "remaining": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Number of remaining items after the current response. Useful to fetch more items."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new thing of type orpheus_library",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "orpheus_library request body",
                        "in": "body",
                        "description": "Body of the POST request",
                        "schema": {
                            "$ref": "#/definitions/orpheus_libraryBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created one thing of type orpheus_library",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Success status of the operation"
                                },
                                "id": {
                                    "type": "string",
                                    "description": "Unique id of the newly created object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/obj/orpheus_setting/{UniqueID}": {
            "get": {
                "description": "Retrieve a thing of type orpheus_setting by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the orpheus_setting to retrieve",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved orpheus_setting",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "$ref": "#/definitions/orpheus_setting"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "description": "Modifies a thing of type orpheus_setting by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the orpheus_setting to modify",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "orpheus_setting request body",
                        "in": "body",
                        "description": "Body of the PATCH request",
                        "schema": {
                            "$ref": "#/definitions/orpheus_settingBody"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Modified orpheus_setting"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Replaces a thing of type orpheus_setting by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the orpheus_setting to replace",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "orpheus_setting request body",
                        "in": "body",
                        "description": "Body of the PUT request",
                        "schema": {
                            "$ref": "#/definitions/orpheus_settingBody"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Replaced orpheus_setting"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a thing of type orpheus_setting by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the orpheus_setting to delete",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Replaced orpheus_setting"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/obj/orpheus_setting": {
            "get": {
                "description": "Retrieve a list of things of type orpheus_setting with some optional search constraints. Retrieves 100 items at most at once.",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items to fetch (maximum is 100)",
                        "type": "integer",
                        "format": "int32",
                        "default": 50
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "description": "Position to start from in the list",
                        "type": "integer",
                        "format": "int32",
                        "default": 0
                    },
                    {
                        "name": "sort_field",
                        "in": "query",
                        "description": "Field to sort the list on",
                        "type": "string"
                    },
                    {
                        "name": "descending",
                        "in": "query",
                        "description": "Sorting type: descending or ascending",
                        "type": "boolean"
                    },
                    {
                        "name": "constraints",
                        "in": "query",
                        "description": "Search constraints, stringified array as described [here](https://manual.bubble.io/core-resources/api/data-api#search-constraints)",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved list of orpheus_settings",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/orpheus_setting"
                                            }
                                        },
                                        "cursor": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Rank of the first item in the list"
                                        },
                                        "count": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Number of items in the current response. It is the minimum between the actual length of the list and the sent limit (or 100 if you did not specify a limit)."
                                        },
                                        "remaining": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Number of remaining items after the current response. Useful to fetch more items."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new thing of type orpheus_setting",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "orpheus_setting request body",
                        "in": "body",
                        "description": "Body of the POST request",
                        "schema": {
                            "$ref": "#/definitions/orpheus_settingBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created one thing of type orpheus_setting",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Success status of the operation"
                                },
                                "id": {
                                    "type": "string",
                                    "description": "Unique id of the newly created object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/obj/pipelineplugins/{UniqueID}": {
            "get": {
                "description": "Retrieve a thing of type pipelineplugins by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the pipelineplugins to retrieve",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved pipelineplugins",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "$ref": "#/definitions/pipelineplugins"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "description": "Modifies a thing of type pipelineplugins by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the pipelineplugins to modify",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "pipelineplugins request body",
                        "in": "body",
                        "description": "Body of the PATCH request",
                        "schema": {
                            "$ref": "#/definitions/pipelinepluginsBody"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Modified pipelineplugins"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Replaces a thing of type pipelineplugins by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the pipelineplugins to replace",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "pipelineplugins request body",
                        "in": "body",
                        "description": "Body of the PUT request",
                        "schema": {
                            "$ref": "#/definitions/pipelinepluginsBody"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Replaced pipelineplugins"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a thing of type pipelineplugins by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the pipelineplugins to delete",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Replaced pipelineplugins"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/obj/pipelineplugins": {
            "get": {
                "description": "Retrieve a list of things of type pipelineplugins with some optional search constraints. Retrieves 100 items at most at once.",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items to fetch (maximum is 100)",
                        "type": "integer",
                        "format": "int32",
                        "default": 50
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "description": "Position to start from in the list",
                        "type": "integer",
                        "format": "int32",
                        "default": 0
                    },
                    {
                        "name": "sort_field",
                        "in": "query",
                        "description": "Field to sort the list on",
                        "type": "string"
                    },
                    {
                        "name": "descending",
                        "in": "query",
                        "description": "Sorting type: descending or ascending",
                        "type": "boolean"
                    },
                    {
                        "name": "constraints",
                        "in": "query",
                        "description": "Search constraints, stringified array as described [here](https://manual.bubble.io/core-resources/api/data-api#search-constraints)",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved list of pipelineplugins",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/pipelineplugins"
                                            }
                                        },
                                        "cursor": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Rank of the first item in the list"
                                        },
                                        "count": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Number of items in the current response. It is the minimum between the actual length of the list and the sent limit (or 100 if you did not specify a limit)."
                                        },
                                        "remaining": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Number of remaining items after the current response. Useful to fetch more items."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new thing of type pipelineplugins",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "pipelineplugins request body",
                        "in": "body",
                        "description": "Body of the POST request",
                        "schema": {
                            "$ref": "#/definitions/pipelinepluginsBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created one thing of type pipelineplugins",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Success status of the operation"
                                },
                                "id": {
                                    "type": "string",
                                    "description": "Unique id of the newly created object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/obj/pronunciations/{UniqueID}": {
            "get": {
                "description": "Retrieve a thing of type pronunciations by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the pronunciations to retrieve",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved pronunciations",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "$ref": "#/definitions/pronunciations"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "description": "Modifies a thing of type pronunciations by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the pronunciations to modify",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "pronunciations request body",
                        "in": "body",
                        "description": "Body of the PATCH request",
                        "schema": {
                            "$ref": "#/definitions/pronunciationsBody"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Modified pronunciations"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Replaces a thing of type pronunciations by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the pronunciations to replace",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "pronunciations request body",
                        "in": "body",
                        "description": "Body of the PUT request",
                        "schema": {
                            "$ref": "#/definitions/pronunciationsBody"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Replaced pronunciations"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a thing of type pronunciations by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the pronunciations to delete",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Replaced pronunciations"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/obj/pronunciations": {
            "get": {
                "description": "Retrieve a list of things of type pronunciations with some optional search constraints. Retrieves 100 items at most at once.",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items to fetch (maximum is 100)",
                        "type": "integer",
                        "format": "int32",
                        "default": 50
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "description": "Position to start from in the list",
                        "type": "integer",
                        "format": "int32",
                        "default": 0
                    },
                    {
                        "name": "sort_field",
                        "in": "query",
                        "description": "Field to sort the list on",
                        "type": "string"
                    },
                    {
                        "name": "descending",
                        "in": "query",
                        "description": "Sorting type: descending or ascending",
                        "type": "boolean"
                    },
                    {
                        "name": "constraints",
                        "in": "query",
                        "description": "Search constraints, stringified array as described [here](https://manual.bubble.io/core-resources/api/data-api#search-constraints)",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved list of pronunciations",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/pronunciations"
                                            }
                                        },
                                        "cursor": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Rank of the first item in the list"
                                        },
                                        "count": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Number of items in the current response. It is the minimum between the actual length of the list and the sent limit (or 100 if you did not specify a limit)."
                                        },
                                        "remaining": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Number of remaining items after the current response. Useful to fetch more items."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new thing of type pronunciations",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "pronunciations request body",
                        "in": "body",
                        "description": "Body of the POST request",
                        "schema": {
                            "$ref": "#/definitions/pronunciationsBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created one thing of type pronunciations",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Success status of the operation"
                                },
                                "id": {
                                    "type": "string",
                                    "description": "Unique id of the newly created object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/obj/remote_files/{UniqueID}": {
            "get": {
                "description": "Retrieve a thing of type remote_files by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the remote_files to retrieve",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved remote_files",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "$ref": "#/definitions/remote_files"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "description": "Modifies a thing of type remote_files by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the remote_files to modify",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "remote_files request body",
                        "in": "body",
                        "description": "Body of the PATCH request",
                        "schema": {
                            "$ref": "#/definitions/remote_filesBody"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Modified remote_files"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Replaces a thing of type remote_files by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the remote_files to replace",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "remote_files request body",
                        "in": "body",
                        "description": "Body of the PUT request",
                        "schema": {
                            "$ref": "#/definitions/remote_filesBody"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Replaced remote_files"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a thing of type remote_files by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the remote_files to delete",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Replaced remote_files"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/obj/remote_files": {
            "get": {
                "description": "Retrieve a list of things of type remote_files with some optional search constraints. Retrieves 100 items at most at once.",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items to fetch (maximum is 100)",
                        "type": "integer",
                        "format": "int32",
                        "default": 50
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "description": "Position to start from in the list",
                        "type": "integer",
                        "format": "int32",
                        "default": 0
                    },
                    {
                        "name": "sort_field",
                        "in": "query",
                        "description": "Field to sort the list on",
                        "type": "string"
                    },
                    {
                        "name": "descending",
                        "in": "query",
                        "description": "Sorting type: descending or ascending",
                        "type": "boolean"
                    },
                    {
                        "name": "constraints",
                        "in": "query",
                        "description": "Search constraints, stringified array as described [here](https://manual.bubble.io/core-resources/api/data-api#search-constraints)",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved list of remote_files",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/remote_files"
                                            }
                                        },
                                        "cursor": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Rank of the first item in the list"
                                        },
                                        "count": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Number of items in the current response. It is the minimum between the actual length of the list and the sent limit (or 100 if you did not specify a limit)."
                                        },
                                        "remaining": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Number of remaining items after the current response. Useful to fetch more items."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new thing of type remote_files",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "remote_files request body",
                        "in": "body",
                        "description": "Body of the POST request",
                        "schema": {
                            "$ref": "#/definitions/remote_filesBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created one thing of type remote_files",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Success status of the operation"
                                },
                                "id": {
                                    "type": "string",
                                    "description": "Unique id of the newly created object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/obj/saved_voices/{UniqueID}": {
            "get": {
                "description": "Retrieve a thing of type saved_voices by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the saved_voices to retrieve",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved saved_voices",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "$ref": "#/definitions/saved_voices"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "description": "Modifies a thing of type saved_voices by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the saved_voices to modify",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "saved_voices request body",
                        "in": "body",
                        "description": "Body of the PATCH request",
                        "schema": {
                            "$ref": "#/definitions/saved_voicesBody"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Modified saved_voices"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Replaces a thing of type saved_voices by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the saved_voices to replace",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "saved_voices request body",
                        "in": "body",
                        "description": "Body of the PUT request",
                        "schema": {
                            "$ref": "#/definitions/saved_voicesBody"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Replaced saved_voices"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a thing of type saved_voices by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the saved_voices to delete",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Replaced saved_voices"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/obj/saved_voices": {
            "get": {
                "description": "Retrieve a list of things of type saved_voices with some optional search constraints. Retrieves 100 items at most at once.",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items to fetch (maximum is 100)",
                        "type": "integer",
                        "format": "int32",
                        "default": 50
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "description": "Position to start from in the list",
                        "type": "integer",
                        "format": "int32",
                        "default": 0
                    },
                    {
                        "name": "sort_field",
                        "in": "query",
                        "description": "Field to sort the list on",
                        "type": "string"
                    },
                    {
                        "name": "descending",
                        "in": "query",
                        "description": "Sorting type: descending or ascending",
                        "type": "boolean"
                    },
                    {
                        "name": "constraints",
                        "in": "query",
                        "description": "Search constraints, stringified array as described [here](https://manual.bubble.io/core-resources/api/data-api#search-constraints)",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved list of saved_voices",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/saved_voices"
                                            }
                                        },
                                        "cursor": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Rank of the first item in the list"
                                        },
                                        "count": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Number of items in the current response. It is the minimum between the actual length of the list and the sent limit (or 100 if you did not specify a limit)."
                                        },
                                        "remaining": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Number of remaining items after the current response. Useful to fetch more items."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new thing of type saved_voices",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "saved_voices request body",
                        "in": "body",
                        "description": "Body of the POST request",
                        "schema": {
                            "$ref": "#/definitions/saved_voicesBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created one thing of type saved_voices",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Success status of the operation"
                                },
                                "id": {
                                    "type": "string",
                                    "description": "Unique id of the newly created object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/obj/scene/{UniqueID}": {
            "get": {
                "description": "Retrieve a thing of type scene by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the scene to retrieve",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved scene",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "$ref": "#/definitions/scene"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "description": "Modifies a thing of type scene by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the scene to modify",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "scene request body",
                        "in": "body",
                        "description": "Body of the PATCH request",
                        "schema": {
                            "$ref": "#/definitions/sceneBody"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Modified scene"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Replaces a thing of type scene by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the scene to replace",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "scene request body",
                        "in": "body",
                        "description": "Body of the PUT request",
                        "schema": {
                            "$ref": "#/definitions/sceneBody"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Replaced scene"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a thing of type scene by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the scene to delete",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Replaced scene"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/obj/scene": {
            "get": {
                "description": "Retrieve a list of things of type scene with some optional search constraints. Retrieves 100 items at most at once.",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items to fetch (maximum is 100)",
                        "type": "integer",
                        "format": "int32",
                        "default": 50
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "description": "Position to start from in the list",
                        "type": "integer",
                        "format": "int32",
                        "default": 0
                    },
                    {
                        "name": "sort_field",
                        "in": "query",
                        "description": "Field to sort the list on",
                        "type": "string"
                    },
                    {
                        "name": "descending",
                        "in": "query",
                        "description": "Sorting type: descending or ascending",
                        "type": "boolean"
                    },
                    {
                        "name": "constraints",
                        "in": "query",
                        "description": "Search constraints, stringified array as described [here](https://manual.bubble.io/core-resources/api/data-api#search-constraints)",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved list of scenes",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/scene"
                                            }
                                        },
                                        "cursor": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Rank of the first item in the list"
                                        },
                                        "count": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Number of items in the current response. It is the minimum between the actual length of the list and the sent limit (or 100 if you did not specify a limit)."
                                        },
                                        "remaining": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Number of remaining items after the current response. Useful to fetch more items."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new thing of type scene",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "scene request body",
                        "in": "body",
                        "description": "Body of the POST request",
                        "schema": {
                            "$ref": "#/definitions/sceneBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created one thing of type scene",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Success status of the operation"
                                },
                                "id": {
                                    "type": "string",
                                    "description": "Unique id of the newly created object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/obj/avatars/{UniqueID}": {
            "get": {
                "description": "Retrieve a thing of type avatars by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the avatars to retrieve",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved avatars",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "$ref": "#/definitions/avatars"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "description": "Modifies a thing of type avatars by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the avatars to modify",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "avatars request body",
                        "in": "body",
                        "description": "Body of the PATCH request",
                        "schema": {
                            "$ref": "#/definitions/avatarsBody"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Modified avatars"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Replaces a thing of type avatars by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the avatars to replace",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "avatars request body",
                        "in": "body",
                        "description": "Body of the PUT request",
                        "schema": {
                            "$ref": "#/definitions/avatarsBody"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Replaced avatars"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a thing of type avatars by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the avatars to delete",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Replaced avatars"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/obj/avatars": {
            "get": {
                "description": "Retrieve a list of things of type avatars with some optional search constraints. Retrieves 100 items at most at once.",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items to fetch (maximum is 100)",
                        "type": "integer",
                        "format": "int32",
                        "default": 50
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "description": "Position to start from in the list",
                        "type": "integer",
                        "format": "int32",
                        "default": 0
                    },
                    {
                        "name": "sort_field",
                        "in": "query",
                        "description": "Field to sort the list on",
                        "type": "string"
                    },
                    {
                        "name": "descending",
                        "in": "query",
                        "description": "Sorting type: descending or ascending",
                        "type": "boolean"
                    },
                    {
                        "name": "constraints",
                        "in": "query",
                        "description": "Search constraints, stringified array as described [here](https://manual.bubble.io/core-resources/api/data-api#search-constraints)",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved list of avatars",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/avatars"
                                            }
                                        },
                                        "cursor": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Rank of the first item in the list"
                                        },
                                        "count": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Number of items in the current response. It is the minimum between the actual length of the list and the sent limit (or 100 if you did not specify a limit)."
                                        },
                                        "remaining": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Number of remaining items after the current response. Useful to fetch more items."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new thing of type avatars",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "avatars request body",
                        "in": "body",
                        "description": "Body of the POST request",
                        "schema": {
                            "$ref": "#/definitions/avatarsBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created one thing of type avatars",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Success status of the operation"
                                },
                                "id": {
                                    "type": "string",
                                    "description": "Unique id of the newly created object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/obj/playht_setting/{UniqueID}": {
            "get": {
                "description": "Retrieve a thing of type playht_setting by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the playht_setting to retrieve",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved playht_setting",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "$ref": "#/definitions/playht_setting"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "description": "Modifies a thing of type playht_setting by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the playht_setting to modify",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "playht_setting request body",
                        "in": "body",
                        "description": "Body of the PATCH request",
                        "schema": {
                            "$ref": "#/definitions/playht_settingBody"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Modified playht_setting"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Replaces a thing of type playht_setting by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the playht_setting to replace",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "playht_setting request body",
                        "in": "body",
                        "description": "Body of the PUT request",
                        "schema": {
                            "$ref": "#/definitions/playht_settingBody"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Replaced playht_setting"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a thing of type playht_setting by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the playht_setting to delete",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Replaced playht_setting"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/obj/playht_setting": {
            "get": {
                "description": "Retrieve a list of things of type playht_setting with some optional search constraints. Retrieves 100 items at most at once.",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items to fetch (maximum is 100)",
                        "type": "integer",
                        "format": "int32",
                        "default": 50
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "description": "Position to start from in the list",
                        "type": "integer",
                        "format": "int32",
                        "default": 0
                    },
                    {
                        "name": "sort_field",
                        "in": "query",
                        "description": "Field to sort the list on",
                        "type": "string"
                    },
                    {
                        "name": "descending",
                        "in": "query",
                        "description": "Sorting type: descending or ascending",
                        "type": "boolean"
                    },
                    {
                        "name": "constraints",
                        "in": "query",
                        "description": "Search constraints, stringified array as described [here](https://manual.bubble.io/core-resources/api/data-api#search-constraints)",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved list of playht_settings",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/playht_setting"
                                            }
                                        },
                                        "cursor": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Rank of the first item in the list"
                                        },
                                        "count": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Number of items in the current response. It is the minimum between the actual length of the list and the sent limit (or 100 if you did not specify a limit)."
                                        },
                                        "remaining": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Number of remaining items after the current response. Useful to fetch more items."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new thing of type playht_setting",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "playht_setting request body",
                        "in": "body",
                        "description": "Body of the POST request",
                        "schema": {
                            "$ref": "#/definitions/playht_settingBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created one thing of type playht_setting",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Success status of the operation"
                                },
                                "id": {
                                    "type": "string",
                                    "description": "Unique id of the newly created object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/obj/video/{UniqueID}": {
            "get": {
                "description": "Retrieve a thing of type video by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the video to retrieve",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved video",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "$ref": "#/definitions/video"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "description": "Modifies a thing of type video by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the video to modify",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "video request body",
                        "in": "body",
                        "description": "Body of the PATCH request",
                        "schema": {
                            "$ref": "#/definitions/videoBody"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Modified video"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Replaces a thing of type video by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the video to replace",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "video request body",
                        "in": "body",
                        "description": "Body of the PUT request",
                        "schema": {
                            "$ref": "#/definitions/videoBody"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Replaced video"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a thing of type video by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the video to delete",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Replaced video"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/obj/video": {
            "get": {
                "description": "Retrieve a list of things of type video with some optional search constraints. Retrieves 100 items at most at once.",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items to fetch (maximum is 100)",
                        "type": "integer",
                        "format": "int32",
                        "default": 50
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "description": "Position to start from in the list",
                        "type": "integer",
                        "format": "int32",
                        "default": 0
                    },
                    {
                        "name": "sort_field",
                        "in": "query",
                        "description": "Field to sort the list on",
                        "type": "string"
                    },
                    {
                        "name": "descending",
                        "in": "query",
                        "description": "Sorting type: descending or ascending",
                        "type": "boolean"
                    },
                    {
                        "name": "constraints",
                        "in": "query",
                        "description": "Search constraints, stringified array as described [here](https://manual.bubble.io/core-resources/api/data-api#search-constraints)",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved list of videos",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/video"
                                            }
                                        },
                                        "cursor": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Rank of the first item in the list"
                                        },
                                        "count": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Number of items in the current response. It is the minimum between the actual length of the list and the sent limit (or 100 if you did not specify a limit)."
                                        },
                                        "remaining": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Number of remaining items after the current response. Useful to fetch more items."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new thing of type video",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "video request body",
                        "in": "body",
                        "description": "Body of the POST request",
                        "schema": {
                            "$ref": "#/definitions/videoBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created one thing of type video",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Success status of the operation"
                                },
                                "id": {
                                    "type": "string",
                                    "description": "Unique id of the newly created object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/obj/visualtemplates/{UniqueID}": {
            "get": {
                "description": "Retrieve a thing of type visualtemplates by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the visualtemplates to retrieve",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved visualtemplates",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "$ref": "#/definitions/visualtemplates"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "description": "Modifies a thing of type visualtemplates by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the visualtemplates to modify",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "visualtemplates request body",
                        "in": "body",
                        "description": "Body of the PATCH request",
                        "schema": {
                            "$ref": "#/definitions/visualtemplatesBody"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Modified visualtemplates"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Replaces a thing of type visualtemplates by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the visualtemplates to replace",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "visualtemplates request body",
                        "in": "body",
                        "description": "Body of the PUT request",
                        "schema": {
                            "$ref": "#/definitions/visualtemplatesBody"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Replaced visualtemplates"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a thing of type visualtemplates by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the visualtemplates to delete",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Replaced visualtemplates"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/obj/visualtemplates": {
            "get": {
                "description": "Retrieve a list of things of type visualtemplates with some optional search constraints. Retrieves 100 items at most at once.",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items to fetch (maximum is 100)",
                        "type": "integer",
                        "format": "int32",
                        "default": 50
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "description": "Position to start from in the list",
                        "type": "integer",
                        "format": "int32",
                        "default": 0
                    },
                    {
                        "name": "sort_field",
                        "in": "query",
                        "description": "Field to sort the list on",
                        "type": "string"
                    },
                    {
                        "name": "descending",
                        "in": "query",
                        "description": "Sorting type: descending or ascending",
                        "type": "boolean"
                    },
                    {
                        "name": "constraints",
                        "in": "query",
                        "description": "Search constraints, stringified array as described [here](https://manual.bubble.io/core-resources/api/data-api#search-constraints)",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved list of visualtemplates",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/visualtemplates"
                                            }
                                        },
                                        "cursor": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Rank of the first item in the list"
                                        },
                                        "count": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Number of items in the current response. It is the minimum between the actual length of the list and the sent limit (or 100 if you did not specify a limit)."
                                        },
                                        "remaining": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Number of remaining items after the current response. Useful to fetch more items."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new thing of type visualtemplates",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "visualtemplates request body",
                        "in": "body",
                        "description": "Body of the POST request",
                        "schema": {
                            "$ref": "#/definitions/visualtemplatesBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created one thing of type visualtemplates",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Success status of the operation"
                                },
                                "id": {
                                    "type": "string",
                                    "description": "Unique id of the newly created object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/obj/voice/{UniqueID}": {
            "get": {
                "description": "Retrieve a thing of type voice by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the voice to retrieve",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved voice",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "$ref": "#/definitions/voice"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "description": "Modifies a thing of type voice by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the voice to modify",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "voice request body",
                        "in": "body",
                        "description": "Body of the PATCH request",
                        "schema": {
                            "$ref": "#/definitions/voiceBody"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Modified voice"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Replaces a thing of type voice by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the voice to replace",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "voice request body",
                        "in": "body",
                        "description": "Body of the PUT request",
                        "schema": {
                            "$ref": "#/definitions/voiceBody"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Replaced voice"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a thing of type voice by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the voice to delete",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Replaced voice"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/obj/voice": {
            "get": {
                "description": "Retrieve a list of things of type voice with some optional search constraints. Retrieves 100 items at most at once.",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items to fetch (maximum is 100)",
                        "type": "integer",
                        "format": "int32",
                        "default": 50
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "description": "Position to start from in the list",
                        "type": "integer",
                        "format": "int32",
                        "default": 0
                    },
                    {
                        "name": "sort_field",
                        "in": "query",
                        "description": "Field to sort the list on",
                        "type": "string"
                    },
                    {
                        "name": "descending",
                        "in": "query",
                        "description": "Sorting type: descending or ascending",
                        "type": "boolean"
                    },
                    {
                        "name": "constraints",
                        "in": "query",
                        "description": "Search constraints, stringified array as described [here](https://manual.bubble.io/core-resources/api/data-api#search-constraints)",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved list of voices",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/voice"
                                            }
                                        },
                                        "cursor": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Rank of the first item in the list"
                                        },
                                        "count": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Number of items in the current response. It is the minimum between the actual length of the list and the sent limit (or 100 if you did not specify a limit)."
                                        },
                                        "remaining": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Number of remaining items after the current response. Useful to fetch more items."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new thing of type voice",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "voice request body",
                        "in": "body",
                        "description": "Body of the POST request",
                        "schema": {
                            "$ref": "#/definitions/voiceBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created one thing of type voice",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Success status of the operation"
                                },
                                "id": {
                                    "type": "string",
                                    "description": "Unique id of the newly created object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/obj/playhtlibrary/{UniqueID}": {
            "get": {
                "description": "Retrieve a thing of type playhtlibrary by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the playhtlibrary to retrieve",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved playhtlibrary",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "$ref": "#/definitions/playhtlibrary"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "description": "Modifies a thing of type playhtlibrary by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the playhtlibrary to modify",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "playhtlibrary request body",
                        "in": "body",
                        "description": "Body of the PATCH request",
                        "schema": {
                            "$ref": "#/definitions/playhtlibraryBody"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Modified playhtlibrary"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Replaces a thing of type playhtlibrary by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the playhtlibrary to replace",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "playhtlibrary request body",
                        "in": "body",
                        "description": "Body of the PUT request",
                        "schema": {
                            "$ref": "#/definitions/playhtlibraryBody"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Replaced playhtlibrary"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a thing of type playhtlibrary by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the playhtlibrary to delete",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Replaced playhtlibrary"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/obj/playhtlibrary": {
            "get": {
                "description": "Retrieve a list of things of type playhtlibrary with some optional search constraints. Retrieves 100 items at most at once.",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items to fetch (maximum is 100)",
                        "type": "integer",
                        "format": "int32",
                        "default": 50
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "description": "Position to start from in the list",
                        "type": "integer",
                        "format": "int32",
                        "default": 0
                    },
                    {
                        "name": "sort_field",
                        "in": "query",
                        "description": "Field to sort the list on",
                        "type": "string"
                    },
                    {
                        "name": "descending",
                        "in": "query",
                        "description": "Sorting type: descending or ascending",
                        "type": "boolean"
                    },
                    {
                        "name": "constraints",
                        "in": "query",
                        "description": "Search constraints, stringified array as described [here](https://manual.bubble.io/core-resources/api/data-api#search-constraints)",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved list of playhtlibraries",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/playhtlibrary"
                                            }
                                        },
                                        "cursor": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Rank of the first item in the list"
                                        },
                                        "count": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Number of items in the current response. It is the minimum between the actual length of the list and the sent limit (or 100 if you did not specify a limit)."
                                        },
                                        "remaining": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Number of remaining items after the current response. Useful to fetch more items."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new thing of type playhtlibrary",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "playhtlibrary request body",
                        "in": "body",
                        "description": "Body of the POST request",
                        "schema": {
                            "$ref": "#/definitions/playhtlibraryBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created one thing of type playhtlibrary",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Success status of the operation"
                                },
                                "id": {
                                    "type": "string",
                                    "description": "Unique id of the newly created object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "brandguidelines": {
            "type": "object",
            "properties": {
                "Brand domain name": {
                    "type": "string",
                    "description": "'Brand domain name' field of the current Brand Guidelines"
                },
                "Brand IG username": {
                    "type": "string",
                    "description": "'Brand IG username' field of the current Brand Guidelines"
                },
                "Brand search name": {
                    "type": "string",
                    "description": "'Brand search name' field of the current Brand Guidelines"
                },
                "Brand Youtube channel": {
                    "type": "string",
                    "description": "'Brand Youtube channel' field of the current Brand Guidelines"
                },
                "Fave Avatars": {
                    "type": "array",
                    "description": "'Fave Avatars' field of the current Brand Guidelines",
                    "items": {
                        "type": "string",
                        "description": "avatars ('avatars' represented by a unique ID)"
                    }
                },
                "Name": {
                    "type": "string",
                    "description": "'Name' field of the current Brand Guidelines"
                },
                "Pipeline List": {
                    "type": "array",
                    "description": "'Pipeline List' field of the current Brand Guidelines",
                    "items": {
                        "type": "string",
                        "description": "pipelineplugins ('pipelineplugins' represented by a unique ID)"
                    }
                },
                "Remove Blank Layouts": {
                    "type": "boolean",
                    "description": "'Remove Blank Layouts' field of the current Brand Guidelines"
                },
                "Scene Notes": {
                    "type": "string",
                    "description": "'Scene Notes' field of the current Brand Guidelines"
                },
                "Target Platform": {
                    "type": "option set",
                    "description": "'Target Platform' field of the current Brand Guidelines"
                },
                "Team": {
                    "type": "array",
                    "description": "'Team' field of the current Brand Guidelines",
                    "items": {
                        "type": "string",
                        "description": "team ('team' represented by a unique ID)"
                    }
                },
                "Video Outline": {
                    "type": "string",
                    "description": "'Video Outline' field of the current Brand Guidelines"
                },
                "Writing Style": {
                    "type": "string",
                    "description": "'Writing Style' field of the current Brand Guidelines"
                },
                "Writing Style Option": {
                    "type": "option set",
                    "description": "'Writing Style Option' field of the current Brand Guidelines"
                },
                "Created Date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "'Created Date' field of the current Brand Guidelines"
                },
                "Modified Date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "'Modified Date' field of the current Brand Guidelines"
                },
                "Created By": {
                    "type": "string",
                    "description": "'Created By' field of the current Brand Guidelines ('user' represented by a unique ID)"
                },
                "_id": {
                    "type": "string",
                    "description": "'unique ID' field of the current Brand Guidelines"
                },
                "Slug": {
                    "type": "string",
                    "description": "'Slug' field of the current Brand Guidelines"
                }
            }
        },
        "comfyui_custom": {
            "type": "object",
            "properties": {
                "Category": {
                    "type": "option set",
                    "description": "'Category' field of the current comfyUI_custom"
                },
                "Description": {
                    "type": "string",
                    "description": "'Description' field of the current comfyUI_custom"
                },
                "Display Name": {
                    "type": "string",
                    "description": "'Display Name' field of the current comfyUI_custom"
                },
                "Inference Vendor": {
                    "type": "string",
                    "description": "'Inference Vendor' field of the current comfyUI_custom"
                },
                "model_id": {
                    "type": "string",
                    "description": "'model_id' field of the current comfyUI_custom"
                },
                "model_name": {
                    "type": "string",
                    "description": "'model_name' field of the current comfyUI_custom"
                },
                "node_name": {
                    "type": "string",
                    "description": "'node_name' field of the current comfyUI_custom"
                },
                "node_filename": {
                    "type": "string",
                    "description": "'node_filename' field of the current comfyUI_custom"
                },
                "node_module_name": {
                    "type": "string",
                    "description": "'node_module_name' field of the current comfyUI_custom"
                },
                "openapi_schema": {
                    "type": "string",
                    "description": "'openapi_schema' field of the current comfyUI_custom"
                },
                "Preview": {
                    "type": "string",
                    "description": "'Preview' field of the current comfyUI_custom"
                },
                "zip": {
                    "type": "string",
                    "description": "'zip' field of the current comfyUI_custom"
                },
                "Teams": {
                    "type": "array",
                    "description": "'Teams' field of the current comfyUI_custom",
                    "items": {
                        "type": "string",
                        "description": "team ('team' represented by a unique ID)"
                    }
                },
                "Valid Pipeline Steps": {
                    "type": "array",
                    "description": "'Valid Pipeline Steps' field of the current comfyUI_custom",
                    "items": {
                        "type": "option set"
                    }
                },
                "Vendor Logo": {
                    "type": "string",
                    "description": "'Vendor Logo' field of the current comfyUI_custom"
                },
                "Vendor Name": {
                    "type": "string",
                    "description": "'Vendor Name' field of the current comfyUI_custom"
                },
                "zip_url": {
                    "type": "string",
                    "description": "'zip_url' field of the current comfyUI_custom"
                },
                "Created Date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "'Created Date' field of the current comfyUI_custom"
                },
                "Modified Date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "'Modified Date' field of the current comfyUI_custom"
                },
                "Created By": {
                    "type": "string",
                    "description": "'Created By' field of the current comfyUI_custom ('user' represented by a unique ID)"
                },
                "_id": {
                    "type": "string",
                    "description": "'unique ID' field of the current comfyUI_custom"
                },
                "Slug": {
                    "type": "string",
                    "description": "'Slug' field of the current comfyUI_custom"
                }
            }
        },
        "comfyui_workflow": {
            "type": "object",
            "properties": {
                "dependencies": {
                    "type": "array",
                    "description": "'dependencies' field of the current comfyUI_workflow",
                    "items": {
                        "type": "string",
                        "description": "comfyui_custom ('comfyui_custom' represented by a unique ID)"
                    }
                },
                "JSON": {
                    "type": "string",
                    "description": "'JSON' field of the current comfyUI_workflow"
                },
                "name": {
                    "type": "string",
                    "description": "'name' field of the current comfyUI_workflow"
                },
                "workflow_url": {
                    "type": "string",
                    "description": "'workflow_url' field of the current comfyUI_workflow"
                },
                "Created Date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "'Created Date' field of the current comfyUI_workflow"
                },
                "Modified Date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "'Modified Date' field of the current comfyUI_workflow"
                },
                "Created By": {
                    "type": "string",
                    "description": "'Created By' field of the current comfyUI_workflow ('user' represented by a unique ID)"
                },
                "_id": {
                    "type": "string",
                    "description": "'unique ID' field of the current comfyUI_workflow"
                },
                "Slug": {
                    "type": "string",
                    "description": "'Slug' field of the current comfyUI_workflow"
                }
            }
        },
        "elevenlabslibrary": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string",
                    "description": "'category' field of the current ElevenLabs Library"
                },
                "label-accent": {
                    "type": "string",
                    "description": "'label-accent' field of the current ElevenLabs Library"
                },
                "label-age": {
                    "type": "string",
                    "description": "'label-age' field of the current ElevenLabs Library"
                },
                "label-description": {
                    "type": "string",
                    "description": "'label-description' field of the current ElevenLabs Library"
                },
                "label-gender": {
                    "type": "string",
                    "description": "'label-gender' field of the current ElevenLabs Library"
                },
                "label-use case": {
                    "type": "string",
                    "description": "'label-use case' field of the current ElevenLabs Library"
                },
                "name": {
                    "type": "string",
                    "description": "'name' field of the current ElevenLabs Library"
                },
                "preview url": {
                    "type": "string",
                    "description": "'preview url' field of the current ElevenLabs Library"
                },
                "voice_id": {
                    "type": "string",
                    "description": "'voice_id' field of the current ElevenLabs Library"
                },
                "Created Date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "'Created Date' field of the current ElevenLabs Library"
                },
                "Modified Date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "'Modified Date' field of the current ElevenLabs Library"
                },
                "Created By": {
                    "type": "string",
                    "description": "'Created By' field of the current ElevenLabs Library ('user' represented by a unique ID)"
                },
                "_id": {
                    "type": "string",
                    "description": "'unique ID' field of the current ElevenLabs Library"
                },
                "Slug": {
                    "type": "string",
                    "description": "'Slug' field of the current ElevenLabs Library"
                }
            }
        },
        "elevenlabs_setting": {
            "type": "object",
            "properties": {
                "elevenlabs_voice": {
                    "type": "string",
                    "description": "'elevenlabs_voice' field of the current Elevenlabs_setting ('elevenlabslibrary' represented by a unique ID)"
                },
                "saved voice": {
                    "type": "string",
                    "description": "'saved voice' field of the current Elevenlabs_setting ('saved_voices' represented by a unique ID)"
                },
                "similarity_boost": {
                    "type": "number",
                    "format": "float",
                    "description": "'similarity_boost' field of the current Elevenlabs_setting"
                },
                "stability": {
                    "type": "number",
                    "format": "float",
                    "description": "'stability' field of the current Elevenlabs_setting"
                },
                "style_exag": {
                    "type": "number",
                    "format": "float",
                    "description": "'style_exag' field of the current Elevenlabs_setting"
                },
                "text": {
                    "type": "string",
                    "description": "'text' field of the current Elevenlabs_setting"
                },
                "url": {
                    "type": "string",
                    "description": "'url' field of the current Elevenlabs_setting"
                },
                "Created Date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "'Created Date' field of the current Elevenlabs_setting"
                },
                "Modified Date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "'Modified Date' field of the current Elevenlabs_setting"
                },
                "Created By": {
                    "type": "string",
                    "description": "'Created By' field of the current Elevenlabs_setting ('user' represented by a unique ID)"
                },
                "_id": {
                    "type": "string",
                    "description": "'unique ID' field of the current Elevenlabs_setting"
                },
                "Slug": {
                    "type": "string",
                    "description": "'Slug' field of the current Elevenlabs_setting"
                }
            }
        },
        "oauth": {
            "type": "object",
            "properties": {
                "getty_access_token": {
                    "type": "string",
                    "description": "'getty_access_token' field of the current Oauth"
                },
                "getty_product": {
                    "type": "string",
                    "description": "'getty_product' field of the current Oauth"
                },
                "getty_refresh_token": {
                    "type": "string",
                    "description": "'getty_refresh_token' field of the current Oauth"
                },
                "user": {
                    "type": "string",
                    "description": "'user' field of the current Oauth ('user' represented by a unique ID)"
                },
                "Created Date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "'Created Date' field of the current Oauth"
                },
                "Modified Date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "'Modified Date' field of the current Oauth"
                },
                "Created By": {
                    "type": "string",
                    "description": "'Created By' field of the current Oauth ('user' represented by a unique ID)"
                },
                "_id": {
                    "type": "string",
                    "description": "'unique ID' field of the current Oauth"
                },
                "Slug": {
                    "type": "string",
                    "description": "'Slug' field of the current Oauth"
                }
            }
        },
        "orpheus_library": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "'name' field of the current Orpheus_library"
                },
                "preview_url": {
                    "type": "string",
                    "description": "'preview_url' field of the current Orpheus_library"
                },
                "voice_id": {
                    "type": "string",
                    "description": "'voice_id' field of the current Orpheus_library"
                },
                "Created Date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "'Created Date' field of the current Orpheus_library"
                },
                "Modified Date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "'Modified Date' field of the current Orpheus_library"
                },
                "Created By": {
                    "type": "string",
                    "description": "'Created By' field of the current Orpheus_library ('user' represented by a unique ID)"
                },
                "_id": {
                    "type": "string",
                    "description": "'unique ID' field of the current Orpheus_library"
                },
                "Slug": {
                    "type": "string",
                    "description": "'Slug' field of the current Orpheus_library"
                }
            }
        },
        "orpheus_setting": {
            "type": "object",
            "properties": {
                "orpheus_voice": {
                    "type": "string",
                    "description": "'orpheus_voice' field of the current orpheus_setting ('orpheus_library' represented by a unique ID)"
                },
                "saved_voice": {
                    "type": "string",
                    "description": "'saved_voice' field of the current orpheus_setting ('saved_voices' represented by a unique ID)"
                },
                "text": {
                    "type": "string",
                    "description": "'text' field of the current orpheus_setting"
                },
                "url": {
                    "type": "string",
                    "description": "'url' field of the current orpheus_setting"
                },
                "Created Date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "'Created Date' field of the current orpheus_setting"
                },
                "Modified Date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "'Modified Date' field of the current orpheus_setting"
                },
                "Created By": {
                    "type": "string",
                    "description": "'Created By' field of the current orpheus_setting ('user' represented by a unique ID)"
                },
                "_id": {
                    "type": "string",
                    "description": "'unique ID' field of the current orpheus_setting"
                },
                "Slug": {
                    "type": "string",
                    "description": "'Slug' field of the current orpheus_setting"
                }
            }
        },
        "pipelineplugins": {
            "type": "object",
            "properties": {
                "Brand Guideline": {
                    "type": "string",
                    "description": "'Brand Guideline' field of the current Pipeline Plugins ('brandguidelines' represented by a unique ID)"
                },
                "Node": {
                    "type": "string",
                    "description": "'Node' field of the current Pipeline Plugins ('comfyui_custom' represented by a unique ID)"
                },
                "Step": {
                    "type": "option set",
                    "description": "'Step' field of the current Pipeline Plugins"
                },
                "Created Date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "'Created Date' field of the current Pipeline Plugins"
                },
                "Modified Date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "'Modified Date' field of the current Pipeline Plugins"
                },
                "Created By": {
                    "type": "string",
                    "description": "'Created By' field of the current Pipeline Plugins ('user' represented by a unique ID)"
                },
                "_id": {
                    "type": "string",
                    "description": "'unique ID' field of the current Pipeline Plugins"
                },
                "Slug": {
                    "type": "string",
                    "description": "'Slug' field of the current Pipeline Plugins"
                }
            }
        },
        "pronunciations": {
            "type": "object",
            "properties": {
                "Brand Guideline": {
                    "type": "string",
                    "description": "'Brand Guideline' field of the current Pronunciations ('brandguidelines' represented by a unique ID)"
                },
                "Original": {
                    "type": "string",
                    "description": "'Original' field of the current Pronunciations"
                },
                "Replacement": {
                    "type": "string",
                    "description": "'Replacement' field of the current Pronunciations"
                },
                "Voice": {
                    "type": "string",
                    "description": "'Voice' field of the current Pronunciations ('elevenlabslibrary' represented by a unique ID)"
                },
                "Created Date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "'Created Date' field of the current Pronunciations"
                },
                "Modified Date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "'Modified Date' field of the current Pronunciations"
                },
                "Created By": {
                    "type": "string",
                    "description": "'Created By' field of the current Pronunciations ('user' represented by a unique ID)"
                },
                "_id": {
                    "type": "string",
                    "description": "'unique ID' field of the current Pronunciations"
                },
                "Slug": {
                    "type": "string",
                    "description": "'Slug' field of the current Pronunciations"
                }
            }
        },
        "remote_files": {
            "type": "object",
            "properties": {
                "path": {
                    "type": "string",
                    "description": "'path' field of the current remote_files"
                },
                "team_id": {
                    "type": "string",
                    "description": "'team_id' field of the current remote_files"
                },
                "user description": {
                    "type": "string",
                    "description": "'user description' field of the current remote_files"
                },
                "Created Date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "'Created Date' field of the current remote_files"
                },
                "Modified Date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "'Modified Date' field of the current remote_files"
                },
                "Created By": {
                    "type": "string",
                    "description": "'Created By' field of the current remote_files ('user' represented by a unique ID)"
                },
                "_id": {
                    "type": "string",
                    "description": "'unique ID' field of the current remote_files"
                },
                "Slug": {
                    "type": "string",
                    "description": "'Slug' field of the current remote_files"
                }
            }
        },
        "saved_voices": {
            "type": "object",
            "properties": {
                "brand_guideline": {
                    "type": "string",
                    "description": "'brand_guideline' field of the current Saved_voices ('brandguidelines' represented by a unique ID)"
                },
                "elevenlabs_setting": {
                    "type": "string",
                    "description": "'elevenlabs_setting' field of the current Saved_voices ('elevenlabs_setting' represented by a unique ID)"
                },
                "orpheus_setting": {
                    "type": "string",
                    "description": "'orpheus_setting' field of the current Saved_voices ('orpheus_setting' represented by a unique ID)"
                },
                "playht_setting": {
                    "type": "string",
                    "description": "'playht_setting' field of the current Saved_voices ('playht_setting' represented by a unique ID)"
                },
                "Preview URL": {
                    "type": "string",
                    "description": "'Preview URL' field of the current Saved_voices"
                },
                "voice": {
                    "type": "string",
                    "description": "'voice' field of the current Saved_voices ('voiceslibrary' represented by a unique ID)"
                },
                "voice_id": {
                    "type": "string",
                    "description": "'voice_id' field of the current Saved_voices"
                },
                "Created Date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "'Created Date' field of the current Saved_voices"
                },
                "Modified Date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "'Modified Date' field of the current Saved_voices"
                },
                "Created By": {
                    "type": "string",
                    "description": "'Created By' field of the current Saved_voices ('user' represented by a unique ID)"
                },
                "_id": {
                    "type": "string",
                    "description": "'unique ID' field of the current Saved_voices"
                },
                "Slug": {
                    "type": "string",
                    "description": "'Slug' field of the current Saved_voices"
                }
            }
        },
        "scene": {
            "type": "object",
            "properties": {
                "auth_json": {
                    "type": "string",
                    "description": "'auth_json' field of the current Scene"
                },
                "candidate_index": {
                    "type": "number",
                    "format": "float",
                    "description": "'candidate_index' field of the current Scene"
                },
                "end time": {
                    "type": "number",
                    "format": "float",
                    "description": "'end time' field of the current Scene"
                },
                "feedback": {
                    "type": "array",
                    "description": "'feedback' field of the current Scene",
                    "items": {
                        "type": "string",
                        "description": "feedback ('feedback' represented by a unique ID)"
                    }
                },
                "feedback score": {
                    "type": "number",
                    "format": "float",
                    "description": "'feedback score' field of the current Scene"
                },
                "feedback text": {
                    "type": "string",
                    "description": "'feedback text' field of the current Scene"
                },
                "fs id": {
                    "type": "string",
                    "description": "'fs id' field of the current Scene"
                },
                "gpt cloud link": {
                    "type": "string",
                    "description": "'gpt cloud link' field of the current Scene"
                },
                "gpt visual description": {
                    "type": "string",
                    "description": "'gpt visual description' field of the current Scene"
                },
                "gpt visuals format": {
                    "type": "string",
                    "description": "'gpt visuals format' field of the current Scene"
                },
                "Graphics Overlay URL": {
                    "type": "string",
                    "description": "'Graphics Overlay URL' field of the current Scene"
                },
                "Graphics Template Name": {
                    "type": "string",
                    "description": "'Graphics Template Name' field of the current Scene"
                },
                "graphics": {
                    "type": "string",
                    "description": "'graphics' field of the current Scene"
                },
                "image_source": {
                    "type": "option set",
                    "description": "'image_source' field of the current Scene"
                },
                "index": {
                    "type": "number",
                    "format": "float",
                    "description": "'index' field of the current Scene"
                },
                "Is Deleted": {
                    "type": "boolean",
                    "description": "'Is Deleted' field of the current Scene"
                },
                "Is Edited": {
                    "type": "boolean",
                    "description": "'Is Edited' field of the current Scene"
                },
                "Is Inserted": {
                    "type": "boolean",
                    "description": "'Is Inserted' field of the current Scene"
                },
                "JSON": {
                    "type": "string",
                    "description": "'JSON' field of the current Scene"
                },
                "Progress": {
                    "type": "number",
                    "format": "float",
                    "description": "'Progress' field of the current Scene"
                },
                "start time": {
                    "type": "number",
                    "format": "float",
                    "description": "'start time' field of the current Scene"
                },
                "still_image": {
                    "type": "string",
                    "description": "'still_image' field of the current Scene"
                },
                "thumbnail": {
                    "type": "string",
                    "description": "'thumbnail' field of the current Scene"
                },
                "tts length": {
                    "type": "number",
                    "format": "float",
                    "description": "'tts length' field of the current Scene"
                },
                "tts_url": {
                    "type": "string",
                    "description": "'tts_url' field of the current Scene"
                },
                "video": {
                    "type": "string",
                    "description": "'video' field of the current Scene ('video' represented by a unique ID)"
                },
                "Created Date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "'Created Date' field of the current Scene"
                },
                "Modified Date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "'Modified Date' field of the current Scene"
                },
                "Created By": {
                    "type": "string",
                    "description": "'Created By' field of the current Scene ('user' represented by a unique ID)"
                },
                "_id": {
                    "type": "string",
                    "description": "'unique ID' field of the current Scene"
                },
                "Slug": {
                    "type": "string",
                    "description": "'Slug' field of the current Scene"
                }
            }
        },
        "avatars": {
            "type": "object",
            "properties": {
                "Replica ID": {
                    "type": "string",
                    "description": "'Replica ID' field of the current Avatars"
                },
                "Replica Name": {
                    "type": "string",
                    "description": "'Replica Name' field of the current Avatars"
                },
                "Thumbnail": {
                    "type": "string",
                    "description": "'Thumbnail' field of the current Avatars"
                },
                "Video preview": {
                    "type": "string",
                    "description": "'Video preview' field of the current Avatars"
                },
                "Created Date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "'Created Date' field of the current Avatars"
                },
                "Modified Date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "'Modified Date' field of the current Avatars"
                },
                "Created By": {
                    "type": "string",
                    "description": "'Created By' field of the current Avatars ('user' represented by a unique ID)"
                },
                "_id": {
                    "type": "string",
                    "description": "'unique ID' field of the current Avatars"
                },
                "Slug": {
                    "type": "string",
                    "description": "'Slug' field of the current Avatars"
                }
            }
        },
        "playht_setting": {
            "type": "object",
            "properties": {
                "audio endpoint": {
                    "type": "string",
                    "description": "'audio endpoint' field of the current playht_setting"
                },
                "brand guideline": {
                    "type": "string",
                    "description": "'brand guideline' field of the current playht_setting ('brandguidelines' represented by a unique ID)"
                },
                "count": {
                    "type": "number",
                    "format": "float",
                    "description": "'count' field of the current playht_setting"
                },
                "Description": {
                    "type": "string",
                    "description": "'Description' field of the current playht_setting"
                },
                "emotion": {
                    "type": "option set",
                    "description": "'emotion' field of the current playht_setting"
                },
                "Error": {
                    "type": "string",
                    "description": "'Error' field of the current playht_setting"
                },
                "language": {
                    "type": "string",
                    "description": "'language' field of the current playht_setting"
                },
                "PlayHt voice": {
                    "type": "string",
                    "description": "'PlayHt voice' field of the current playht_setting ('playhtlibrary' represented by a unique ID)"
                },
                "saved voice": {
                    "type": "string",
                    "description": "'saved voice' field of the current playht_setting ('saved_voices' represented by a unique ID)"
                },
                "size": {
                    "type": "string",
                    "description": "'size' field of the current playht_setting"
                },
                "speed": {
                    "type": "number",
                    "format": "float",
                    "description": "'speed' field of the current playht_setting"
                },
                "status": {
                    "type": "string",
                    "description": "'status' field of the current playht_setting"
                },
                "style guidance": {
                    "type": "number",
                    "format": "float",
                    "description": "'style guidance' field of the current playht_setting"
                },
                "Text": {
                    "type": "string",
                    "description": "'Text' field of the current playht_setting"
                },
                "duration": {
                    "type": "string",
                    "description": "'duration' field of the current playht_setting"
                },
                "url": {
                    "type": "string",
                    "description": "'url' field of the current playht_setting"
                },
                "voice guidance": {
                    "type": "number",
                    "format": "float",
                    "description": "'voice guidance' field of the current playht_setting"
                },
                "Created Date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "'Created Date' field of the current playht_setting"
                },
                "Modified Date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "'Modified Date' field of the current playht_setting"
                },
                "Created By": {
                    "type": "string",
                    "description": "'Created By' field of the current playht_setting ('user' represented by a unique ID)"
                },
                "_id": {
                    "type": "string",
                    "description": "'unique ID' field of the current playht_setting"
                },
                "Slug": {
                    "type": "string",
                    "description": "'Slug' field of the current playht_setting"
                }
            }
        },
        "video": {
            "type": "object",
            "properties": {
                "Aeon Managed Captions": {
                    "type": "boolean",
                    "description": "'Aeon Managed Captions' field of the current Video"
                },
                "AI Image Only": {
                    "type": "boolean",
                    "description": "'AI Image Only' field of the current Video"
                },
                "Alternate Pronunciation": {
                    "type": "boolean",
                    "description": "'Alternate Pronunciation' field of the current Video"
                },
                "Animated Cover": {
                    "type": "string",
                    "description": "'Animated Cover' field of the current Video"
                },
                "Aspect Ratio": {
                    "type": "option set",
                    "description": "'Aspect Ratio' field of the current Video"
                },
                "Aspect Ratios Variants": {
                    "type": "array",
                    "description": "'Aspect Ratios Variants' field of the current Video",
                    "items": {
                        "type": "option set"
                    }
                },
                "Brand Guideline": {
                    "type": "string",
                    "description": "'Brand Guideline' field of the current Video ('brandguidelines' represented by a unique ID)"
                },
                "Bulk?": {
                    "type": "boolean",
                    "description": "'Bulk?' field of the current Video"
                },
                "Bulk URLs": {
                    "type": "string",
                    "description": "'Bulk URLs' field of the current Video"
                },
                "Caption Prompt": {
                    "type": "string",
                    "description": "'Caption Prompt' field of the current Video"
                },
                "Child Video": {
                    "type": "array",
                    "description": "'Child Video' field of the current Video",
                    "items": {
                        "type": "string",
                        "description": "video ('video' represented by a unique ID)"
                    }
                },
                "Combine URL": {
                    "type": "string",
                    "description": "'Combine URL' field of the current Video"
                },
                "Do Cover Art": {
                    "type": "boolean",
                    "description": "'Do Cover Art' field of the current Video"
                },
                "Cover Art": {
                    "type": "string",
                    "description": "'Cover Art' field of the current Video"
                },
                "Currently Edited?": {
                    "type": "boolean",
                    "description": "'Currently Edited?' field of the current Video"
                },
                "CustomTags": {
                    "type": "array",
                    "description": "'CustomTags' field of the current Video",
                    "items": {
                        "type": "string",
                        "description": "tags ('tags' represented by a unique ID)"
                    }
                },
                "Do Cutdown": {
                    "type": "boolean",
                    "description": "'Do Cutdown' field of the current Video"
                },
                "Default Tags": {
                    "type": "option set",
                    "description": "'Default Tags' field of the current Video"
                },
                "Developer video": {
                    "type": "boolean",
                    "description": "'Developer video' field of the current Video"
                },
                "Do Auto Music Selection": {
                    "type": "boolean",
                    "description": "'Do Auto Music Selection' field of the current Video"
                },
                "Do Captions": {
                    "type": "boolean",
                    "description": "'Do Captions' field of the current Video"
                },
                "Do Getty": {
                    "type": "boolean",
                    "description": "'Do Getty' field of the current Video"
                },
                "Do Page Scanning": {
                    "type": "boolean",
                    "description": "'Do Page Scanning' field of the current Video"
                },
                "Do Soundtrack": {
                    "type": "boolean",
                    "description": "'Do Soundtrack' field of the current Video"
                },
                "Do TTS": {
                    "type": "boolean",
                    "description": "'Do TTS' field of the current Video"
                },
                "Dont Split?": {
                    "type": "string",
                    "description": "'Dont Split?' field of the current Video"
                },
                "Draft Version": {
                    "type": "string",
                    "description": "'Draft Version' field of the current Video ('video' represented by a unique ID)"
                },
                "Paper Edit Source": {
                    "type": "string",
                    "description": "'Paper Edit Source' field of the current Video"
                },
                "File Library List": {
                    "type": "array",
                    "description": "'File Library List' field of the current Video",
                    "items": {
                        "type": "string",
                        "description": "remote_files ('remote_files' represented by a unique ID)"
                    }
                },
                "Focus On": {
                    "type": "string",
                    "description": "'Focus On' field of the current Video"
                },
                "Force Voice Patch": {
                    "type": "boolean",
                    "description": "'Force Voice Patch' field of the current Video"
                },
                "Google Images": {
                    "type": "boolean",
                    "description": "'Google Images' field of the current Video"
                },
                "Height": {
                    "type": "number",
                    "format": "float",
                    "description": "'Height' field of the current Video"
                },
                "Is Production": {
                    "type": "boolean",
                    "description": "'Is Production' field of the current Video"
                },
                "Keep Duplicates?": {
                    "type": "boolean",
                    "description": "'Keep Duplicates?' field of the current Video"
                },
                "Language Code": {
                    "type": "string",
                    "description": "'Language Code' field of the current Video"
                },
                "Source Filenames": {
                    "type": "array",
                    "description": "'Source Filenames' field of the current Video",
                    "items": {
                        "type": "string"
                    }
                },
                "Manifest": {
                    "type": "string",
                    "description": "'Manifest' field of the current Video"
                },
                "Max Chars Per Line": {
                    "type": "number",
                    "format": "float",
                    "description": "'Max Chars Per Line' field of the current Video"
                },
                "Mult Page Assets": {
                    "type": "string",
                    "description": "'Mult Page Assets' field of the current Video"
                },
                "Music Notes": {
                    "type": "string",
                    "description": "'Music Notes' field of the current Video"
                },
                "Name": {
                    "type": "string",
                    "description": "'Name' field of the current Video"
                },
                "New Scene List": {
                    "type": "array",
                    "description": "'New Scene List' field of the current Video",
                    "items": {
                        "type": "string",
                        "description": "scene ('scene' represented by a unique ID)"
                    }
                },
                "New Voice List": {
                    "type": "array",
                    "description": "'New Voice List' field of the current Video",
                    "items": {
                        "type": "string",
                        "description": "voice ('voice' represented by a unique ID)"
                    }
                },
                "NT Airtable ID": {
                    "type": "string",
                    "description": "'NT Airtable ID' field of the current Video"
                },
                "NT Handle": {
                    "type": "string",
                    "description": "'NT Handle' field of the current Video"
                },
                "Num Chapters": {
                    "type": "number",
                    "format": "float",
                    "description": "'Num Chapters' field of the current Video"
                },
                "Output URL": {
                    "type": "string",
                    "description": "'Output URL' field of the current Video"
                },
                "Override Captions": {
                    "type": "string",
                    "description": "'Override Captions' field of the current Video"
                },
                "Parent Video": {
                    "type": "string",
                    "description": "'Parent Video' field of the current Video ('video' represented by a unique ID)"
                },
                "Paywall?": {
                    "type": "boolean",
                    "description": "'Paywall?' field of the current Video"
                },
                "Pipeline Filename": {
                    "type": "string",
                    "description": "'Pipeline Filename' field of the current Video"
                },
                "Preset Name": {
                    "type": "string",
                    "description": "'Preset Name' field of the current Video"
                },
                "Preview ID": {
                    "type": "string",
                    "description": "'Preview ID' field of the current Video"
                },
                "Preview Only": {
                    "type": "boolean",
                    "description": "'Preview Only' field of the current Video"
                },
                "Preview Status": {
                    "type": "string",
                    "description": "'Preview Status' field of the current Video"
                },
                "Product Catalogs": {
                    "type": "boolean",
                    "description": "'Product Catalogs' field of the current Video"
                },
                "Progress Body": {
                    "type": "string",
                    "description": "'Progress Body' field of the current Video"
                },
                "Progress Headline": {
                    "type": "string",
                    "description": "'Progress Headline' field of the current Video"
                },
                "Published Version": {
                    "type": "string",
                    "description": "'Published Version' field of the current Video ('video' represented by a unique ID)"
                },
                "reaarange complete": {
                    "type": "boolean",
                    "description": "'reaarange complete' field of the current Video"
                },
                "Retain Structure": {
                    "type": "boolean",
                    "description": "'Retain Structure' field of the current Video"
                },
                "saved voice": {
                    "type": "string",
                    "description": "'saved voice' field of the current Video ('saved_voices' represented by a unique ID)"
                },
                "Scene Duration": {
                    "type": "number",
                    "format": "float",
                    "description": "'Scene Duration' field of the current Video"
                },
                "Text Source": {
                    "type": "string",
                    "description": "'Text Source' field of the current Video"
                },
                "SFX Volume": {
                    "type": "number",
                    "format": "float",
                    "description": "'SFX Volume' field of the current Video"
                },
                "Site Assets": {
                    "type": "boolean",
                    "description": "'Site Assets' field of the current Video"
                },
                "Social Media": {
                    "type": "boolean",
                    "description": "'Social Media' field of the current Video"
                },
                "Soundtrack": {
                    "type": "string",
                    "description": "'Soundtrack' field of the current Video"
                },
                "Soundtrack Volume": {
                    "type": "number",
                    "format": "float",
                    "description": "'Soundtrack Volume' field of the current Video"
                },
                "Source Media": {
                    "type": "string",
                    "description": "'Source Media' field of the current Video"
                },
                "Source Type": {
                    "type": "option set",
                    "description": "'Source Type' field of the current Video"
                },
                "Source URL": {
                    "type": "string",
                    "description": "'Source URL' field of the current Video"
                },
                "Speech Speed": {
                    "type": "string",
                    "description": "'Speech Speed' field of the current Video"
                },
                "Speech Volume": {
                    "type": "number",
                    "format": "float",
                    "description": "'Speech Volume' field of the current Video"
                },
                "Status": {
                    "type": "option set",
                    "description": "'Status' field of the current Video"
                },
                "Stock": {
                    "type": "boolean",
                    "description": "'Stock' field of the current Video"
                },
                "Tasks": {
                    "type": "array",
                    "description": "'Tasks' field of the current Video",
                    "items": {
                        "type": "string",
                        "description": "task ('task' represented by a unique ID)"
                    }
                },
                "Team": {
                    "type": "string",
                    "description": "'Team' field of the current Video ('team' represented by a unique ID)"
                },
                "Temporary Cover": {
                    "type": "string",
                    "description": "'Temporary Cover' field of the current Video"
                },
                "Temporary Video?": {
                    "type": "boolean",
                    "description": "'Temporary Video?' field of the current Video"
                },
                "Use File Library?": {
                    "type": "boolean",
                    "description": "'Use File Library?' field of the current Video"
                },
                "Synthetic Images": {
                    "type": "boolean",
                    "description": "'Synthetic Images' field of the current Video"
                },
                "Video Length": {
                    "type": "number",
                    "format": "float",
                    "description": "'Video Length' field of the current Video"
                },
                "Video Only": {
                    "type": "string",
                    "description": "'Video Only' field of the current Video"
                },
                "Video Speed": {
                    "type": "number",
                    "format": "float",
                    "description": "'Video Speed' field of the current Video"
                },
                "Voice": {
                    "type": "string",
                    "description": "'Voice' field of the current Video ('elevenlabslibrary' represented by a unique ID)"
                },
                "Voice ID": {
                    "type": "string",
                    "description": "'Voice ID' field of the current Video"
                },
                "Width": {
                    "type": "number",
                    "format": "float",
                    "description": "'Width' field of the current Video"
                },
                "Youtube": {
                    "type": "boolean",
                    "description": "'Youtube' field of the current Video"
                },
                "Created Date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "'Created Date' field of the current Video"
                },
                "Modified Date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "'Modified Date' field of the current Video"
                },
                "Created By": {
                    "type": "string",
                    "description": "'Created By' field of the current Video ('user' represented by a unique ID)"
                },
                "_id": {
                    "type": "string",
                    "description": "'unique ID' field of the current Video"
                },
                "Slug": {
                    "type": "string",
                    "description": "'Slug' field of the current Video"
                }
            }
        },
        "visualtemplates": {
            "type": "object",
            "properties": {
                "Alternate Template": {
                    "type": "string",
                    "description": "'Alternate Template' field of the current Visual Templates ('visualtemplates' represented by a unique ID)"
                },
                "Alternate Template TEMP": {
                    "type": "string",
                    "description": "'Alternate Template TEMP' field of the current Visual Templates"
                },
                "Always Included?": {
                    "type": "boolean",
                    "description": "'Always Included?' field of the current Visual Templates"
                },
                "Animated Cover": {
                    "type": "string",
                    "description": "'Animated Cover' field of the current Visual Templates"
                },
                "Aspect Ratio": {
                    "type": "option set",
                    "description": "'Aspect Ratio' field of the current Visual Templates"
                },
                "Brand Guidelines": {
                    "type": "array",
                    "description": "'Brand Guidelines' field of the current Visual Templates",
                    "items": {
                        "type": "string",
                        "description": "brandguidelines ('brandguidelines' represented by a unique ID)"
                    }
                },
                "Built In?": {
                    "type": "boolean",
                    "description": "'Built In?' field of the current Visual Templates"
                },
                "Cloned From": {
                    "type": "string",
                    "description": "'Cloned From' field of the current Visual Templates ('visualtemplates' represented by a unique ID)"
                },
                "creatomate_id": {
                    "type": "string",
                    "description": "'creatomate_id' field of the current Visual Templates"
                },
                "Description": {
                    "type": "string",
                    "description": "'Description' field of the current Visual Templates"
                },
                "Don't Split?": {
                    "type": "boolean",
                    "description": "'Don't Split?' field of the current Visual Templates"
                },
                "Is Alternate?": {
                    "type": "boolean",
                    "description": "'Is Alternate?' field of the current Visual Templates"
                },
                "js_edited": {
                    "type": "boolean",
                    "description": "'js_edited' field of the current Visual Templates"
                },
                "JSON": {
                    "type": "string",
                    "description": "'JSON' field of the current Visual Templates"
                },
                "Last Render": {
                    "type": "string",
                    "format": "date-time",
                    "description": "'Last Render' field of the current Visual Templates"
                },
                "Layout Type": {
                    "type": "option set",
                    "description": "'Layout Type' field of the current Visual Templates"
                },
                "Marketplace?": {
                    "type": "boolean",
                    "description": "'Marketplace?' field of the current Visual Templates"
                },
                "Meta Description": {
                    "type": "string",
                    "description": "'Meta Description' field of the current Visual Templates"
                },
                "Min Length": {
                    "type": "number",
                    "format": "float",
                    "description": "'Min Length' field of the current Visual Templates"
                },
                "Mute Voice?": {
                    "type": "boolean",
                    "description": "'Mute Voice?' field of the current Visual Templates"
                },
                "Name": {
                    "type": "string",
                    "description": "'Name' field of the current Visual Templates"
                },
                "Position": {
                    "type": "string",
                    "description": "'Position' field of the current Visual Templates"
                },
                "Prompt HTML": {
                    "type": "string",
                    "description": "'Prompt HTML' field of the current Visual Templates"
                },
                "Prompt Plain Text": {
                    "type": "string",
                    "description": "'Prompt Plain Text' field of the current Visual Templates"
                },
                "Rendering": {
                    "type": "boolean",
                    "description": "'Rendering' field of the current Visual Templates"
                },
                "Sample": {
                    "type": "string",
                    "description": "'Sample' field of the current Visual Templates"
                },
                "Scene ID": {
                    "type": "string",
                    "description": "'Scene ID' field of the current Visual Templates ('scene' represented by a unique ID)"
                },
                "tags": {
                    "type": "array",
                    "description": "'tags' field of the current Visual Templates",
                    "items": {
                        "type": "string"
                    }
                },
                "Team": {
                    "type": "array",
                    "description": "'Team' field of the current Visual Templates",
                    "items": {
                        "type": "string",
                        "description": "team ('team' represented by a unique ID)"
                    }
                },
                "Temporary Cover": {
                    "type": "string",
                    "description": "'Temporary Cover' field of the current Visual Templates"
                },
                "Usage Limit": {
                    "type": "number",
                    "format": "float",
                    "description": "'Usage Limit' field of the current Visual Templates"
                },
                "video": {
                    "type": "string",
                    "description": "'video' field of the current Visual Templates ('video' represented by a unique ID)"
                },
                "Created Date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "'Created Date' field of the current Visual Templates"
                },
                "Modified Date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "'Modified Date' field of the current Visual Templates"
                },
                "Created By": {
                    "type": "string",
                    "description": "'Created By' field of the current Visual Templates ('user' represented by a unique ID)"
                },
                "_id": {
                    "type": "string",
                    "description": "'unique ID' field of the current Visual Templates"
                },
                "Slug": {
                    "type": "string",
                    "description": "'Slug' field of the current Visual Templates"
                }
            }
        },
        "voice": {
            "type": "object",
            "properties": {
                "duration": {
                    "type": "number",
                    "format": "float",
                    "description": "'duration' field of the current Voice"
                },
                "end time": {
                    "type": "number",
                    "format": "float",
                    "description": "'end time' field of the current Voice"
                },
                "feedback": {
                    "type": "array",
                    "description": "'feedback' field of the current Voice",
                    "items": {
                        "type": "string",
                        "description": "feedback ('feedback' represented by a unique ID)"
                    }
                },
                "feedback score": {
                    "type": "number",
                    "format": "float",
                    "description": "'feedback score' field of the current Voice"
                },
                "feedback text": {
                    "type": "string",
                    "description": "'feedback text' field of the current Voice"
                },
                "file": {
                    "type": "string",
                    "description": "'file' field of the current Voice"
                },
                "fs id": {
                    "type": "string",
                    "description": "'fs id' field of the current Voice"
                },
                "Is Deleted": {
                    "type": "boolean",
                    "description": "'Is Deleted' field of the current Voice"
                },
                "Is Edited": {
                    "type": "boolean",
                    "description": "'Is Edited' field of the current Voice"
                },
                "JSON": {
                    "type": "string",
                    "description": "'JSON' field of the current Voice"
                },
                "layout list": {
                    "type": "array",
                    "description": "'layout list' field of the current Voice",
                    "items": {
                        "type": "string",
                        "description": "visualtemplates ('visualtemplates' represented by a unique ID)"
                    }
                },
                "saved_voice": {
                    "type": "string",
                    "description": "'saved_voice' field of the current Voice ('saved_voices' represented by a unique ID)"
                },
                "scene list": {
                    "type": "array",
                    "description": "'scene list' field of the current Voice",
                    "items": {
                        "type": "string",
                        "description": "scene ('scene' represented by a unique ID)"
                    }
                },
                "Is Inserted": {
                    "type": "boolean",
                    "description": "'Is Inserted' field of the current Voice"
                },
                "start time": {
                    "type": "number",
                    "format": "float",
                    "description": "'start time' field of the current Voice"
                },
                "unedited file": {
                    "type": "string",
                    "description": "'unedited file' field of the current Voice"
                },
                "unedited voice": {
                    "type": "string",
                    "description": "'unedited voice' field of the current Voice"
                },
                "video": {
                    "type": "string",
                    "description": "'video' field of the current Voice ('video' represented by a unique ID)"
                },
                "storyboard index": {
                    "type": "number",
                    "format": "float",
                    "description": "'storyboard index' field of the current Voice"
                },
                "voice value": {
                    "type": "string",
                    "description": "'voice value' field of the current Voice"
                },
                "Created Date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "'Created Date' field of the current Voice"
                },
                "Modified Date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "'Modified Date' field of the current Voice"
                },
                "Created By": {
                    "type": "string",
                    "description": "'Created By' field of the current Voice ('user' represented by a unique ID)"
                },
                "_id": {
                    "type": "string",
                    "description": "'unique ID' field of the current Voice"
                },
                "Slug": {
                    "type": "string",
                    "description": "'Slug' field of the current Voice"
                }
            }
        },
        "playhtlibrary": {
            "type": "object",
            "properties": {
                "accent": {
                    "type": "string",
                    "description": "'accent' field of the current PlayHT Library"
                },
                "age": {
                    "type": "string",
                    "description": "'age' field of the current PlayHT Library"
                },
                "gender": {
                    "type": "string",
                    "description": "'gender' field of the current PlayHT Library"
                },
                "id": {
                    "type": "string",
                    "description": "'id' field of the current PlayHT Library"
                },
                "is_cloned": {
                    "type": "boolean",
                    "description": "'is_cloned' field of the current PlayHT Library"
                },
                "language code": {
                    "type": "string",
                    "description": "'language code' field of the current PlayHT Library"
                },
                "language": {
                    "type": "string",
                    "description": "'language' field of the current PlayHT Library"
                },
                "loudness": {
                    "type": "string",
                    "description": "'loudness' field of the current PlayHT Library"
                },
                "name": {
                    "type": "string",
                    "description": "'name' field of the current PlayHT Library"
                },
                "sample": {
                    "type": "string",
                    "description": "'sample' field of the current PlayHT Library"
                },
                "style": {
                    "type": "string",
                    "description": "'style' field of the current PlayHT Library"
                },
                "tempo": {
                    "type": "string",
                    "description": "'tempo' field of the current PlayHT Library"
                },
                "texture": {
                    "type": "string",
                    "description": "'texture' field of the current PlayHT Library"
                },
                "voice_engine": {
                    "type": "string",
                    "description": "'voice_engine' field of the current PlayHT Library"
                },
                "Created Date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "'Created Date' field of the current PlayHT Library"
                },
                "Modified Date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "'Modified Date' field of the current PlayHT Library"
                },
                "Created By": {
                    "type": "string",
                    "description": "'Created By' field of the current PlayHT Library ('user' represented by a unique ID)"
                },
                "_id": {
                    "type": "string",
                    "description": "'unique ID' field of the current PlayHT Library"
                },
                "Slug": {
                    "type": "string",
                    "description": "'Slug' field of the current PlayHT Library"
                }
            }
        },
        "⚙️marketingpage": {
            "type": "object",
            "properties": {
                "Body html": {
                    "type": "string",
                    "description": "'Body html' field of the current ⚙️  Marketing page"
                },
                "Files": {
                    "type": "array",
                    "description": "'Files' field of the current ⚙️  Marketing page",
                    "items": {
                        "type": "string"
                    }
                },
                "Flip header colors?": {
                    "type": "boolean",
                    "description": "'Flip header colors?' field of the current ⚙️  Marketing page"
                },
                "Header html": {
                    "type": "string",
                    "description": "'Header html' field of the current ⚙️  Marketing page"
                },
                "Images": {
                    "type": "array",
                    "description": "'Images' field of the current ⚙️  Marketing page",
                    "items": {
                        "type": "string"
                    }
                },
                "Index?": {
                    "type": "boolean",
                    "description": "'Index?' field of the current ⚙️  Marketing page"
                },
                "Last published": {
                    "type": "string",
                    "format": "date-time",
                    "description": "'Last published' field of the current ⚙️  Marketing page"
                },
                "Slug changed?": {
                    "type": "boolean",
                    "description": "'Slug changed?' field of the current ⚙️  Marketing page"
                },
                "SEO / social description": {
                    "type": "string",
                    "description": "'SEO / social description' field of the current ⚙️  Marketing page"
                },
                "SEO / social image": {
                    "type": "string",
                    "description": "'SEO / social image' field of the current ⚙️  Marketing page"
                },
                "SEO / social name": {
                    "type": "string",
                    "description": "'SEO / social name' field of the current ⚙️  Marketing page"
                },
                "Page description": {
                    "type": "string",
                    "description": "'Page description' field of the current ⚙️  Marketing page"
                },
                "Page maker instance id": {
                    "type": "string",
                    "description": "'Page maker instance id' field of the current ⚙️  Marketing page"
                },
                "Temporary image (file)": {
                    "type": "string",
                    "description": "'Temporary image (file)' field of the current ⚙️  Marketing page"
                },
                "Temporary image": {
                    "type": "string",
                    "description": "'Temporary image' field of the current ⚙️  Marketing page"
                },
                "Use default tags?": {
                    "type": "boolean",
                    "description": "'Use default tags?' field of the current ⚙️  Marketing page"
                },
                "Page builder assets version": {
                    "type": "string",
                    "description": "'Page builder assets version' field of the current ⚙️  Marketing page"
                },
                "Created Date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "'Created Date' field of the current ⚙️  Marketing page"
                },
                "Modified Date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "'Modified Date' field of the current ⚙️  Marketing page"
                },
                "Created By": {
                    "type": "string",
                    "description": "'Created By' field of the current ⚙️  Marketing page ('user' represented by a unique ID)"
                },
                "_id": {
                    "type": "string",
                    "description": "'unique ID' field of the current ⚙️  Marketing page"
                },
                "Slug": {
                    "type": "string",
                    "description": "'Slug' field of the current ⚙️  Marketing page"
                }
            }
        },
        "update_usersnapBody": {
            "type": "object",
            "properties": {
                "project": {
                    "type": "string"
                }
            },
            "required": [
                "project"
            ]
        },
        "check_requestBody": {
            "type": "object",
            "properties": {
                "private_token": {
                    "type": "string"
                },
                "public_token": {
                    "type": "string"
                },
                "page": {
                    "type": "string"
                }
            },
            "required": [
                "public_token"
            ]
        },
        "update_pageBody": {
            "type": "object",
            "properties": {
                "private_token": {
                    "type": "string"
                },
                "page": {
                    "type": "string",
                    "description": "⚙️marketingpage ('⚙️marketingpage' represented by a unique ID)"
                },
                "header_html": {
                    "type": "string"
                },
                "body_html": {
                    "type": "string"
                },
                "request_id": {
                    "type": "string"
                },
                "page_builder_version": {
                    "type": "string"
                },
                "flip_header_colors": {
                    "type": "boolean"
                }
            },
            "required": [
                "private_token",
                "page",
                "header_html",
                "body_html",
                "request_id",
                "page_builder_version",
                "flip_header_colors"
            ]
        },
        "record_registrationBody": {
            "type": "object",
            "properties": {
                "public_token": {
                    "type": "string"
                },
                "app_id": {
                    "type": "string"
                }
            },
            "required": [
                "public_token",
                "app_id"
            ]
        },
        "upload_imageBody": {
            "type": "object",
            "properties": {
                "private_token": {
                    "type": "string"
                },
                "page": {
                    "type": "string",
                    "description": "⚙️marketingpage ('⚙️marketingpage' represented by a unique ID)"
                },
                "image": {
                    "type": "string"
                }
            },
            "required": [
                "private_token",
                "page",
                "image"
            ]
        },
        "send_email_templateBody": {
            "type": "object",
            "properties": {
                "recipient": {
                    "type": "string",
                    "description": "user ('user' represented by a unique ID)"
                }
            },
            "required": [
                "recipient"
            ]
        },
        "upload_filesBody": {
            "type": "object",
            "properties": {
                "private_token": {
                    "type": "string"
                },
                "page": {
                    "type": "string",
                    "description": "⚙️marketingpage ('⚙️marketingpage' represented by a unique ID)"
                },
                "files": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "bulk_images": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "page_builder_version": {
                    "type": "string"
                },
                "page_builder_core_images": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "page_builder_core_files": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "private_token",
                "page",
                "page_builder_version",
                "page_builder_core_images",
                "page_builder_core_files"
            ]
        },
        "check_app_locationBody": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                }
            },
            "required": [
                "code"
            ]
        },
        "verify_checkBody": {
            "type": "object",
            "properties": {
                "sent_to": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                }
            },
            "required": [
                "sent_to",
                "code"
            ]
        },
        "renderBody": {
            "type": "object",
            "properties": {
                "video_uid": {
                    "type": "string",
                    "description": "visualtemplates ('visualtemplates' represented by a unique ID)"
                }
            },
            "required": [
                "video_uid"
            ]
        },
        "verify_sendBody": {
            "type": "object",
            "properties": {
                "send_to": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                }
            },
            "required": [
                "send_to",
                "type"
            ]
        },
        "duplicate_video_from_apiBody": {
            "type": "object",
            "properties": {
                "source_id": {
                    "type": "string"
                },
                "destination_name": {
                    "type": "string"
                }
            },
            "required": [
                "source_id",
                "destination_name"
            ]
        },
        "send_xml_resultsBody": {
            "type": "object",
            "properties": {
                "recipient": {
                    "type": "string",
                    "description": "user ('user' represented by a unique ID)"
                },
                "download_url": {
                    "type": "string"
                },
                "user_email": {
                    "type": "string"
                },
                "video_name": {
                    "type": "string"
                }
            },
            "required": [
                "download_url",
                "user_email",
                "video_name"
            ]
        },
        "delete-videoBody": {
            "type": "object",
            "properties": {
                "video_id": {
                    "type": "string",
                    "description": "video ('video' represented by a unique ID)"
                }
            },
            "required": [
                "video_id"
            ]
        },
        "gen-presigned-goog-urlBody": {
            "type": "object",
            "properties": {
                "path": {
                    "type": "string"
                }
            },
            "required": [
                "path"
            ]
        },
        "getty-refresh-tokenBody": {
            "type": "object",
            "properties": {
                "userid": {
                    "type": "string"
                }
            },
            "required": [
                "userid"
            ]
        },
        "getty-access-tokenBody": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            },
            "required": [
                "code",
                "user"
            ]
        },
        "credits_purchasedBody": {
            "type": "object",
            "properties": {},
            "required": [
                "_wf_request_data"
            ]
        },
        "brandguidelinesBody": {
            "type": "object",
            "properties": {
                "Brand domain name": {
                    "type": "string",
                    "description": "'Brand domain name' field of the current Brand Guidelines"
                },
                "Brand IG username": {
                    "type": "string",
                    "description": "'Brand IG username' field of the current Brand Guidelines"
                },
                "Brand search name": {
                    "type": "string",
                    "description": "'Brand search name' field of the current Brand Guidelines"
                },
                "Brand Youtube channel": {
                    "type": "string",
                    "description": "'Brand Youtube channel' field of the current Brand Guidelines"
                },
                "Fave Avatars": {
                    "type": "array",
                    "description": "'Fave Avatars' field of the current Brand Guidelines",
                    "items": {
                        "type": "string",
                        "description": "avatars ('avatars' represented by a unique ID)"
                    }
                },
                "Name": {
                    "type": "string",
                    "description": "'Name' field of the current Brand Guidelines"
                },
                "Pipeline List": {
                    "type": "array",
                    "description": "'Pipeline List' field of the current Brand Guidelines",
                    "items": {
                        "type": "string",
                        "description": "pipelineplugins ('pipelineplugins' represented by a unique ID)"
                    }
                },
                "Remove Blank Layouts": {
                    "type": "boolean",
                    "description": "'Remove Blank Layouts' field of the current Brand Guidelines"
                },
                "Scene Notes": {
                    "type": "string",
                    "description": "'Scene Notes' field of the current Brand Guidelines"
                },
                "Target Platform": {
                    "type": "option set",
                    "description": "'Target Platform' field of the current Brand Guidelines"
                },
                "Team": {
                    "type": "array",
                    "description": "'Team' field of the current Brand Guidelines",
                    "items": {
                        "type": "string",
                        "description": "team ('team' represented by a unique ID)"
                    }
                },
                "Video Outline": {
                    "type": "string",
                    "description": "'Video Outline' field of the current Brand Guidelines"
                },
                "Writing Style": {
                    "type": "string",
                    "description": "'Writing Style' field of the current Brand Guidelines"
                },
                "Writing Style Option": {
                    "type": "option set",
                    "description": "'Writing Style Option' field of the current Brand Guidelines"
                }
            }
        },
        "comfyui_customBody": {
            "type": "object",
            "properties": {
                "Category": {
                    "type": "option set",
                    "description": "'Category' field of the current comfyUI_custom"
                },
                "Description": {
                    "type": "string",
                    "description": "'Description' field of the current comfyUI_custom"
                },
                "Display Name": {
                    "type": "string",
                    "description": "'Display Name' field of the current comfyUI_custom"
                },
                "Inference Vendor": {
                    "type": "string",
                    "description": "'Inference Vendor' field of the current comfyUI_custom"
                },
                "model_id": {
                    "type": "string",
                    "description": "'model_id' field of the current comfyUI_custom"
                },
                "model_name": {
                    "type": "string",
                    "description": "'model_name' field of the current comfyUI_custom"
                },
                "node_name": {
                    "type": "string",
                    "description": "'node_name' field of the current comfyUI_custom"
                },
                "node_filename": {
                    "type": "string",
                    "description": "'node_filename' field of the current comfyUI_custom"
                },
                "node_module_name": {
                    "type": "string",
                    "description": "'node_module_name' field of the current comfyUI_custom"
                },
                "openapi_schema": {
                    "type": "string",
                    "description": "'openapi_schema' field of the current comfyUI_custom"
                },
                "Preview": {
                    "type": "string",
                    "description": "'Preview' field of the current comfyUI_custom"
                },
                "zip": {
                    "type": "string",
                    "description": "'zip' field of the current comfyUI_custom"
                },
                "Teams": {
                    "type": "array",
                    "description": "'Teams' field of the current comfyUI_custom",
                    "items": {
                        "type": "string",
                        "description": "team ('team' represented by a unique ID)"
                    }
                },
                "Valid Pipeline Steps": {
                    "type": "array",
                    "description": "'Valid Pipeline Steps' field of the current comfyUI_custom",
                    "items": {
                        "type": "option set"
                    }
                },
                "Vendor Logo": {
                    "type": "string",
                    "description": "'Vendor Logo' field of the current comfyUI_custom"
                },
                "Vendor Name": {
                    "type": "string",
                    "description": "'Vendor Name' field of the current comfyUI_custom"
                },
                "zip_url": {
                    "type": "string",
                    "description": "'zip_url' field of the current comfyUI_custom"
                }
            }
        },
        "comfyui_workflowBody": {
            "type": "object",
            "properties": {
                "dependencies": {
                    "type": "array",
                    "description": "'dependencies' field of the current comfyUI_workflow",
                    "items": {
                        "type": "string",
                        "description": "comfyui_custom ('comfyui_custom' represented by a unique ID)"
                    }
                },
                "JSON": {
                    "type": "string",
                    "description": "'JSON' field of the current comfyUI_workflow"
                },
                "name": {
                    "type": "string",
                    "description": "'name' field of the current comfyUI_workflow"
                },
                "workflow_url": {
                    "type": "string",
                    "description": "'workflow_url' field of the current comfyUI_workflow"
                }
            }
        },
        "elevenlabslibraryBody": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string",
                    "description": "'category' field of the current ElevenLabs Library"
                },
                "label-accent": {
                    "type": "string",
                    "description": "'label-accent' field of the current ElevenLabs Library"
                },
                "label-age": {
                    "type": "string",
                    "description": "'label-age' field of the current ElevenLabs Library"
                },
                "label-description": {
                    "type": "string",
                    "description": "'label-description' field of the current ElevenLabs Library"
                },
                "label-gender": {
                    "type": "string",
                    "description": "'label-gender' field of the current ElevenLabs Library"
                },
                "label-use case": {
                    "type": "string",
                    "description": "'label-use case' field of the current ElevenLabs Library"
                },
                "name": {
                    "type": "string",
                    "description": "'name' field of the current ElevenLabs Library"
                },
                "preview url": {
                    "type": "string",
                    "description": "'preview url' field of the current ElevenLabs Library"
                },
                "voice_id": {
                    "type": "string",
                    "description": "'voice_id' field of the current ElevenLabs Library"
                }
            }
        },
        "elevenlabs_settingBody": {
            "type": "object",
            "properties": {
                "elevenlabs_voice": {
                    "type": "string",
                    "description": "'elevenlabs_voice' field of the current Elevenlabs_setting ('elevenlabslibrary' represented by a unique ID)"
                },
                "saved voice": {
                    "type": "string",
                    "description": "'saved voice' field of the current Elevenlabs_setting ('saved_voices' represented by a unique ID)"
                },
                "similarity_boost": {
                    "type": "number",
                    "format": "float",
                    "description": "'similarity_boost' field of the current Elevenlabs_setting"
                },
                "stability": {
                    "type": "number",
                    "format": "float",
                    "description": "'stability' field of the current Elevenlabs_setting"
                },
                "style_exag": {
                    "type": "number",
                    "format": "float",
                    "description": "'style_exag' field of the current Elevenlabs_setting"
                },
                "text": {
                    "type": "string",
                    "description": "'text' field of the current Elevenlabs_setting"
                },
                "url": {
                    "type": "string",
                    "description": "'url' field of the current Elevenlabs_setting"
                }
            }
        },
        "oauthBody": {
            "type": "object",
            "properties": {
                "getty_access_token": {
                    "type": "string",
                    "description": "'getty_access_token' field of the current Oauth"
                },
                "getty_product": {
                    "type": "string",
                    "description": "'getty_product' field of the current Oauth"
                },
                "getty_refresh_token": {
                    "type": "string",
                    "description": "'getty_refresh_token' field of the current Oauth"
                },
                "user": {
                    "type": "string",
                    "description": "'user' field of the current Oauth ('user' represented by a unique ID)"
                }
            }
        },
        "orpheus_libraryBody": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "'name' field of the current Orpheus_library"
                },
                "preview_url": {
                    "type": "string",
                    "description": "'preview_url' field of the current Orpheus_library"
                },
                "voice_id": {
                    "type": "string",
                    "description": "'voice_id' field of the current Orpheus_library"
                }
            }
        },
        "orpheus_settingBody": {
            "type": "object",
            "properties": {
                "orpheus_voice": {
                    "type": "string",
                    "description": "'orpheus_voice' field of the current orpheus_setting ('orpheus_library' represented by a unique ID)"
                },
                "saved_voice": {
                    "type": "string",
                    "description": "'saved_voice' field of the current orpheus_setting ('saved_voices' represented by a unique ID)"
                },
                "text": {
                    "type": "string",
                    "description": "'text' field of the current orpheus_setting"
                },
                "url": {
                    "type": "string",
                    "description": "'url' field of the current orpheus_setting"
                }
            }
        },
        "pipelinepluginsBody": {
            "type": "object",
            "properties": {
                "Brand Guideline": {
                    "type": "string",
                    "description": "'Brand Guideline' field of the current Pipeline Plugins ('brandguidelines' represented by a unique ID)"
                },
                "Node": {
                    "type": "string",
                    "description": "'Node' field of the current Pipeline Plugins ('comfyui_custom' represented by a unique ID)"
                },
                "Step": {
                    "type": "option set",
                    "description": "'Step' field of the current Pipeline Plugins"
                }
            }
        },
        "pronunciationsBody": {
            "type": "object",
            "properties": {
                "Brand Guideline": {
                    "type": "string",
                    "description": "'Brand Guideline' field of the current Pronunciations ('brandguidelines' represented by a unique ID)"
                },
                "Original": {
                    "type": "string",
                    "description": "'Original' field of the current Pronunciations"
                },
                "Replacement": {
                    "type": "string",
                    "description": "'Replacement' field of the current Pronunciations"
                },
                "Voice": {
                    "type": "string",
                    "description": "'Voice' field of the current Pronunciations ('elevenlabslibrary' represented by a unique ID)"
                }
            }
        },
        "remote_filesBody": {
            "type": "object",
            "properties": {
                "path": {
                    "type": "string",
                    "description": "'path' field of the current remote_files"
                },
                "team_id": {
                    "type": "string",
                    "description": "'team_id' field of the current remote_files"
                },
                "user description": {
                    "type": "string",
                    "description": "'user description' field of the current remote_files"
                }
            }
        },
        "saved_voicesBody": {
            "type": "object",
            "properties": {
                "brand_guideline": {
                    "type": "string",
                    "description": "'brand_guideline' field of the current Saved_voices ('brandguidelines' represented by a unique ID)"
                },
                "elevenlabs_setting": {
                    "type": "string",
                    "description": "'elevenlabs_setting' field of the current Saved_voices ('elevenlabs_setting' represented by a unique ID)"
                },
                "orpheus_setting": {
                    "type": "string",
                    "description": "'orpheus_setting' field of the current Saved_voices ('orpheus_setting' represented by a unique ID)"
                },
                "playht_setting": {
                    "type": "string",
                    "description": "'playht_setting' field of the current Saved_voices ('playht_setting' represented by a unique ID)"
                },
                "Preview URL": {
                    "type": "string",
                    "description": "'Preview URL' field of the current Saved_voices"
                },
                "voice": {
                    "type": "string",
                    "description": "'voice' field of the current Saved_voices ('voiceslibrary' represented by a unique ID)"
                },
                "voice_id": {
                    "type": "string",
                    "description": "'voice_id' field of the current Saved_voices"
                }
            }
        },
        "sceneBody": {
            "type": "object",
            "properties": {
                "auth_json": {
                    "type": "string",
                    "description": "'auth_json' field of the current Scene"
                },
                "candidate_index": {
                    "type": "number",
                    "format": "float",
                    "description": "'candidate_index' field of the current Scene"
                },
                "end time": {
                    "type": "number",
                    "format": "float",
                    "description": "'end time' field of the current Scene"
                },
                "feedback": {
                    "type": "array",
                    "description": "'feedback' field of the current Scene",
                    "items": {
                        "type": "string",
                        "description": "feedback ('feedback' represented by a unique ID)"
                    }
                },
                "feedback score": {
                    "type": "number",
                    "format": "float",
                    "description": "'feedback score' field of the current Scene"
                },
                "feedback text": {
                    "type": "string",
                    "description": "'feedback text' field of the current Scene"
                },
                "fs id": {
                    "type": "string",
                    "description": "'fs id' field of the current Scene"
                },
                "gpt cloud link": {
                    "type": "string",
                    "description": "'gpt cloud link' field of the current Scene"
                },
                "gpt visual description": {
                    "type": "string",
                    "description": "'gpt visual description' field of the current Scene"
                },
                "gpt visuals format": {
                    "type": "string",
                    "description": "'gpt visuals format' field of the current Scene"
                },
                "Graphics Overlay URL": {
                    "type": "string",
                    "description": "'Graphics Overlay URL' field of the current Scene"
                },
                "Graphics Template Name": {
                    "type": "string",
                    "description": "'Graphics Template Name' field of the current Scene"
                },
                "graphics": {
                    "type": "string",
                    "description": "'graphics' field of the current Scene"
                },
                "image_source": {
                    "type": "option set",
                    "description": "'image_source' field of the current Scene"
                },
                "index": {
                    "type": "number",
                    "format": "float",
                    "description": "'index' field of the current Scene"
                },
                "Is Deleted": {
                    "type": "boolean",
                    "description": "'Is Deleted' field of the current Scene"
                },
                "Is Edited": {
                    "type": "boolean",
                    "description": "'Is Edited' field of the current Scene"
                },
                "Is Inserted": {
                    "type": "boolean",
                    "description": "'Is Inserted' field of the current Scene"
                },
                "JSON": {
                    "type": "string",
                    "description": "'JSON' field of the current Scene"
                },
                "Progress": {
                    "type": "number",
                    "format": "float",
                    "description": "'Progress' field of the current Scene"
                },
                "start time": {
                    "type": "number",
                    "format": "float",
                    "description": "'start time' field of the current Scene"
                },
                "still_image": {
                    "type": "string",
                    "description": "'still_image' field of the current Scene"
                },
                "thumbnail": {
                    "type": "string",
                    "description": "'thumbnail' field of the current Scene"
                },
                "tts length": {
                    "type": "number",
                    "format": "float",
                    "description": "'tts length' field of the current Scene"
                },
                "tts_url": {
                    "type": "string",
                    "description": "'tts_url' field of the current Scene"
                },
                "video": {
                    "type": "string",
                    "description": "'video' field of the current Scene ('video' represented by a unique ID)"
                }
            }
        },
        "avatarsBody": {
            "type": "object",
            "properties": {
                "Replica ID": {
                    "type": "string",
                    "description": "'Replica ID' field of the current Avatars"
                },
                "Replica Name": {
                    "type": "string",
                    "description": "'Replica Name' field of the current Avatars"
                },
                "Thumbnail": {
                    "type": "string",
                    "description": "'Thumbnail' field of the current Avatars"
                },
                "Video preview": {
                    "type": "string",
                    "description": "'Video preview' field of the current Avatars"
                }
            }
        },
        "playht_settingBody": {
            "type": "object",
            "properties": {
                "audio endpoint": {
                    "type": "string",
                    "description": "'audio endpoint' field of the current playht_setting"
                },
                "brand guideline": {
                    "type": "string",
                    "description": "'brand guideline' field of the current playht_setting ('brandguidelines' represented by a unique ID)"
                },
                "count": {
                    "type": "number",
                    "format": "float",
                    "description": "'count' field of the current playht_setting"
                },
                "Description": {
                    "type": "string",
                    "description": "'Description' field of the current playht_setting"
                },
                "emotion": {
                    "type": "option set",
                    "description": "'emotion' field of the current playht_setting"
                },
                "Error": {
                    "type": "string",
                    "description": "'Error' field of the current playht_setting"
                },
                "language": {
                    "type": "string",
                    "description": "'language' field of the current playht_setting"
                },
                "PlayHt voice": {
                    "type": "string",
                    "description": "'PlayHt voice' field of the current playht_setting ('playhtlibrary' represented by a unique ID)"
                },
                "saved voice": {
                    "type": "string",
                    "description": "'saved voice' field of the current playht_setting ('saved_voices' represented by a unique ID)"
                },
                "size": {
                    "type": "string",
                    "description": "'size' field of the current playht_setting"
                },
                "speed": {
                    "type": "number",
                    "format": "float",
                    "description": "'speed' field of the current playht_setting"
                },
                "status": {
                    "type": "string",
                    "description": "'status' field of the current playht_setting"
                },
                "style guidance": {
                    "type": "number",
                    "format": "float",
                    "description": "'style guidance' field of the current playht_setting"
                },
                "Text": {
                    "type": "string",
                    "description": "'Text' field of the current playht_setting"
                },
                "duration": {
                    "type": "string",
                    "description": "'duration' field of the current playht_setting"
                },
                "url": {
                    "type": "string",
                    "description": "'url' field of the current playht_setting"
                },
                "voice guidance": {
                    "type": "number",
                    "format": "float",
                    "description": "'voice guidance' field of the current playht_setting"
                }
            }
        },
        "videoBody": {
            "type": "object",
            "properties": {
                "Aeon Managed Captions": {
                    "type": "boolean",
                    "description": "'Aeon Managed Captions' field of the current Video"
                },
                "AI Image Only": {
                    "type": "boolean",
                    "description": "'AI Image Only' field of the current Video"
                },
                "Alternate Pronunciation": {
                    "type": "boolean",
                    "description": "'Alternate Pronunciation' field of the current Video"
                },
                "Animated Cover": {
                    "type": "string",
                    "description": "'Animated Cover' field of the current Video"
                },
                "Aspect Ratio": {
                    "type": "option set",
                    "description": "'Aspect Ratio' field of the current Video"
                },
                "Aspect Ratios Variants": {
                    "type": "array",
                    "description": "'Aspect Ratios Variants' field of the current Video",
                    "items": {
                        "type": "option set"
                    }
                },
                "Brand Guideline": {
                    "type": "string",
                    "description": "'Brand Guideline' field of the current Video ('brandguidelines' represented by a unique ID)"
                },
                "Bulk?": {
                    "type": "boolean",
                    "description": "'Bulk?' field of the current Video"
                },
                "Bulk URLs": {
                    "type": "string",
                    "description": "'Bulk URLs' field of the current Video"
                },
                "Caption Prompt": {
                    "type": "string",
                    "description": "'Caption Prompt' field of the current Video"
                },
                "Child Video": {
                    "type": "array",
                    "description": "'Child Video' field of the current Video",
                    "items": {
                        "type": "string",
                        "description": "video ('video' represented by a unique ID)"
                    }
                },
                "Combine URL": {
                    "type": "string",
                    "description": "'Combine URL' field of the current Video"
                },
                "Do Cover Art": {
                    "type": "boolean",
                    "description": "'Do Cover Art' field of the current Video"
                },
                "Cover Art": {
                    "type": "string",
                    "description": "'Cover Art' field of the current Video"
                },
                "Currently Edited?": {
                    "type": "boolean",
                    "description": "'Currently Edited?' field of the current Video"
                },
                "CustomTags": {
                    "type": "array",
                    "description": "'CustomTags' field of the current Video",
                    "items": {
                        "type": "string",
                        "description": "tags ('tags' represented by a unique ID)"
                    }
                },
                "Do Cutdown": {
                    "type": "boolean",
                    "description": "'Do Cutdown' field of the current Video"
                },
                "Default Tags": {
                    "type": "option set",
                    "description": "'Default Tags' field of the current Video"
                },
                "Developer video": {
                    "type": "boolean",
                    "description": "'Developer video' field of the current Video"
                },
                "Do Auto Music Selection": {
                    "type": "boolean",
                    "description": "'Do Auto Music Selection' field of the current Video"
                },
                "Do Captions": {
                    "type": "boolean",
                    "description": "'Do Captions' field of the current Video"
                },
                "Do Getty": {
                    "type": "boolean",
                    "description": "'Do Getty' field of the current Video"
                },
                "Do Page Scanning": {
                    "type": "boolean",
                    "description": "'Do Page Scanning' field of the current Video"
                },
                "Do Soundtrack": {
                    "type": "boolean",
                    "description": "'Do Soundtrack' field of the current Video"
                },
                "Do TTS": {
                    "type": "boolean",
                    "description": "'Do TTS' field of the current Video"
                },
                "Dont Split?": {
                    "type": "string",
                    "description": "'Dont Split?' field of the current Video"
                },
                "Draft Version": {
                    "type": "string",
                    "description": "'Draft Version' field of the current Video ('video' represented by a unique ID)"
                },
                "Paper Edit Source": {
                    "type": "string",
                    "description": "'Paper Edit Source' field of the current Video"
                },
                "File Library List": {
                    "type": "array",
                    "description": "'File Library List' field of the current Video",
                    "items": {
                        "type": "string",
                        "description": "remote_files ('remote_files' represented by a unique ID)"
                    }
                },
                "Focus On": {
                    "type": "string",
                    "description": "'Focus On' field of the current Video"
                },
                "Force Voice Patch": {
                    "type": "boolean",
                    "description": "'Force Voice Patch' field of the current Video"
                },
                "Google Images": {
                    "type": "boolean",
                    "description": "'Google Images' field of the current Video"
                },
                "Height": {
                    "type": "number",
                    "format": "float",
                    "description": "'Height' field of the current Video"
                },
                "Is Production": {
                    "type": "boolean",
                    "description": "'Is Production' field of the current Video"
                },
                "Keep Duplicates?": {
                    "type": "boolean",
                    "description": "'Keep Duplicates?' field of the current Video"
                },
                "Language Code": {
                    "type": "string",
                    "description": "'Language Code' field of the current Video"
                },
                "Source Filenames": {
                    "type": "array",
                    "description": "'Source Filenames' field of the current Video",
                    "items": {
                        "type": "string"
                    }
                },
                "Manifest": {
                    "type": "string",
                    "description": "'Manifest' field of the current Video"
                },
                "Max Chars Per Line": {
                    "type": "number",
                    "format": "float",
                    "description": "'Max Chars Per Line' field of the current Video"
                },
                "Mult Page Assets": {
                    "type": "string",
                    "description": "'Mult Page Assets' field of the current Video"
                },
                "Music Notes": {
                    "type": "string",
                    "description": "'Music Notes' field of the current Video"
                },
                "Name": {
                    "type": "string",
                    "description": "'Name' field of the current Video"
                },
                "New Scene List": {
                    "type": "array",
                    "description": "'New Scene List' field of the current Video",
                    "items": {
                        "type": "string",
                        "description": "scene ('scene' represented by a unique ID)"
                    }
                },
                "New Voice List": {
                    "type": "array",
                    "description": "'New Voice List' field of the current Video",
                    "items": {
                        "type": "string",
                        "description": "voice ('voice' represented by a unique ID)"
                    }
                },
                "NT Airtable ID": {
                    "type": "string",
                    "description": "'NT Airtable ID' field of the current Video"
                },
                "NT Handle": {
                    "type": "string",
                    "description": "'NT Handle' field of the current Video"
                },
                "Num Chapters": {
                    "type": "number",
                    "format": "float",
                    "description": "'Num Chapters' field of the current Video"
                },
                "Output URL": {
                    "type": "string",
                    "description": "'Output URL' field of the current Video"
                },
                "Override Captions": {
                    "type": "string",
                    "description": "'Override Captions' field of the current Video"
                },
                "Parent Video": {
                    "type": "string",
                    "description": "'Parent Video' field of the current Video ('video' represented by a unique ID)"
                },
                "Paywall?": {
                    "type": "boolean",
                    "description": "'Paywall?' field of the current Video"
                },
                "Pipeline Filename": {
                    "type": "string",
                    "description": "'Pipeline Filename' field of the current Video"
                },
                "Preset Name": {
                    "type": "string",
                    "description": "'Preset Name' field of the current Video"
                },
                "Preview ID": {
                    "type": "string",
                    "description": "'Preview ID' field of the current Video"
                },
                "Preview Only": {
                    "type": "boolean",
                    "description": "'Preview Only' field of the current Video"
                },
                "Preview Status": {
                    "type": "string",
                    "description": "'Preview Status' field of the current Video"
                },
                "Product Catalogs": {
                    "type": "boolean",
                    "description": "'Product Catalogs' field of the current Video"
                },
                "Progress Body": {
                    "type": "string",
                    "description": "'Progress Body' field of the current Video"
                },
                "Progress Headline": {
                    "type": "string",
                    "description": "'Progress Headline' field of the current Video"
                },
                "Published Version": {
                    "type": "string",
                    "description": "'Published Version' field of the current Video ('video' represented by a unique ID)"
                },
                "reaarange complete": {
                    "type": "boolean",
                    "description": "'reaarange complete' field of the current Video"
                },
                "Retain Structure": {
                    "type": "boolean",
                    "description": "'Retain Structure' field of the current Video"
                },
                "saved voice": {
                    "type": "string",
                    "description": "'saved voice' field of the current Video ('saved_voices' represented by a unique ID)"
                },
                "Scene Duration": {
                    "type": "number",
                    "format": "float",
                    "description": "'Scene Duration' field of the current Video"
                },
                "Text Source": {
                    "type": "string",
                    "description": "'Text Source' field of the current Video"
                },
                "SFX Volume": {
                    "type": "number",
                    "format": "float",
                    "description": "'SFX Volume' field of the current Video"
                },
                "Site Assets": {
                    "type": "boolean",
                    "description": "'Site Assets' field of the current Video"
                },
                "Social Media": {
                    "type": "boolean",
                    "description": "'Social Media' field of the current Video"
                },
                "Soundtrack": {
                    "type": "string",
                    "description": "'Soundtrack' field of the current Video"
                },
                "Soundtrack Volume": {
                    "type": "number",
                    "format": "float",
                    "description": "'Soundtrack Volume' field of the current Video"
                },
                "Source Media": {
                    "type": "string",
                    "description": "'Source Media' field of the current Video"
                },
                "Source Type": {
                    "type": "option set",
                    "description": "'Source Type' field of the current Video"
                },
                "Source URL": {
                    "type": "string",
                    "description": "'Source URL' field of the current Video"
                },
                "Speech Speed": {
                    "type": "string",
                    "description": "'Speech Speed' field of the current Video"
                },
                "Speech Volume": {
                    "type": "number",
                    "format": "float",
                    "description": "'Speech Volume' field of the current Video"
                },
                "Status": {
                    "type": "option set",
                    "description": "'Status' field of the current Video"
                },
                "Stock": {
                    "type": "boolean",
                    "description": "'Stock' field of the current Video"
                },
                "Tasks": {
                    "type": "array",
                    "description": "'Tasks' field of the current Video",
                    "items": {
                        "type": "string",
                        "description": "task ('task' represented by a unique ID)"
                    }
                },
                "Team": {
                    "type": "string",
                    "description": "'Team' field of the current Video ('team' represented by a unique ID)"
                },
                "Temporary Cover": {
                    "type": "string",
                    "description": "'Temporary Cover' field of the current Video"
                },
                "Temporary Video?": {
                    "type": "boolean",
                    "description": "'Temporary Video?' field of the current Video"
                },
                "Use File Library?": {
                    "type": "boolean",
                    "description": "'Use File Library?' field of the current Video"
                },
                "Synthetic Images": {
                    "type": "boolean",
                    "description": "'Synthetic Images' field of the current Video"
                },
                "Video Length": {
                    "type": "number",
                    "format": "float",
                    "description": "'Video Length' field of the current Video"
                },
                "Video Only": {
                    "type": "string",
                    "description": "'Video Only' field of the current Video"
                },
                "Video Speed": {
                    "type": "number",
                    "format": "float",
                    "description": "'Video Speed' field of the current Video"
                },
                "Voice": {
                    "type": "string",
                    "description": "'Voice' field of the current Video ('elevenlabslibrary' represented by a unique ID)"
                },
                "Voice ID": {
                    "type": "string",
                    "description": "'Voice ID' field of the current Video"
                },
                "Width": {
                    "type": "number",
                    "format": "float",
                    "description": "'Width' field of the current Video"
                },
                "Youtube": {
                    "type": "boolean",
                    "description": "'Youtube' field of the current Video"
                }
            }
        },
        "visualtemplatesBody": {
            "type": "object",
            "properties": {
                "Alternate Template": {
                    "type": "string",
                    "description": "'Alternate Template' field of the current Visual Templates ('visualtemplates' represented by a unique ID)"
                },
                "Alternate Template TEMP": {
                    "type": "string",
                    "description": "'Alternate Template TEMP' field of the current Visual Templates"
                },
                "Always Included?": {
                    "type": "boolean",
                    "description": "'Always Included?' field of the current Visual Templates"
                },
                "Animated Cover": {
                    "type": "string",
                    "description": "'Animated Cover' field of the current Visual Templates"
                },
                "Aspect Ratio": {
                    "type": "option set",
                    "description": "'Aspect Ratio' field of the current Visual Templates"
                },
                "Brand Guidelines": {
                    "type": "array",
                    "description": "'Brand Guidelines' field of the current Visual Templates",
                    "items": {
                        "type": "string",
                        "description": "brandguidelines ('brandguidelines' represented by a unique ID)"
                    }
                },
                "Built In?": {
                    "type": "boolean",
                    "description": "'Built In?' field of the current Visual Templates"
                },
                "Cloned From": {
                    "type": "string",
                    "description": "'Cloned From' field of the current Visual Templates ('visualtemplates' represented by a unique ID)"
                },
                "creatomate_id": {
                    "type": "string",
                    "description": "'creatomate_id' field of the current Visual Templates"
                },
                "Description": {
                    "type": "string",
                    "description": "'Description' field of the current Visual Templates"
                },
                "Don't Split?": {
                    "type": "boolean",
                    "description": "'Don't Split?' field of the current Visual Templates"
                },
                "Is Alternate?": {
                    "type": "boolean",
                    "description": "'Is Alternate?' field of the current Visual Templates"
                },
                "js_edited": {
                    "type": "boolean",
                    "description": "'js_edited' field of the current Visual Templates"
                },
                "JSON": {
                    "type": "string",
                    "description": "'JSON' field of the current Visual Templates"
                },
                "Last Render": {
                    "type": "string",
                    "format": "date-time",
                    "description": "'Last Render' field of the current Visual Templates"
                },
                "Layout Type": {
                    "type": "option set",
                    "description": "'Layout Type' field of the current Visual Templates"
                },
                "Marketplace?": {
                    "type": "boolean",
                    "description": "'Marketplace?' field of the current Visual Templates"
                },
                "Meta Description": {
                    "type": "string",
                    "description": "'Meta Description' field of the current Visual Templates"
                },
                "Min Length": {
                    "type": "number",
                    "format": "float",
                    "description": "'Min Length' field of the current Visual Templates"
                },
                "Mute Voice?": {
                    "type": "boolean",
                    "description": "'Mute Voice?' field of the current Visual Templates"
                },
                "Name": {
                    "type": "string",
                    "description": "'Name' field of the current Visual Templates"
                },
                "Position": {
                    "type": "string",
                    "description": "'Position' field of the current Visual Templates"
                },
                "Prompt HTML": {
                    "type": "string",
                    "description": "'Prompt HTML' field of the current Visual Templates"
                },
                "Prompt Plain Text": {
                    "type": "string",
                    "description": "'Prompt Plain Text' field of the current Visual Templates"
                },
                "Rendering": {
                    "type": "boolean",
                    "description": "'Rendering' field of the current Visual Templates"
                },
                "Sample": {
                    "type": "string",
                    "description": "'Sample' field of the current Visual Templates"
                },
                "Scene ID": {
                    "type": "string",
                    "description": "'Scene ID' field of the current Visual Templates ('scene' represented by a unique ID)"
                },
                "tags": {
                    "type": "array",
                    "description": "'tags' field of the current Visual Templates",
                    "items": {
                        "type": "string"
                    }
                },
                "Team": {
                    "type": "array",
                    "description": "'Team' field of the current Visual Templates",
                    "items": {
                        "type": "string",
                        "description": "team ('team' represented by a unique ID)"
                    }
                },
                "Temporary Cover": {
                    "type": "string",
                    "description": "'Temporary Cover' field of the current Visual Templates"
                },
                "Usage Limit": {
                    "type": "number",
                    "format": "float",
                    "description": "'Usage Limit' field of the current Visual Templates"
                },
                "video": {
                    "type": "string",
                    "description": "'video' field of the current Visual Templates ('video' represented by a unique ID)"
                }
            }
        },
        "voiceBody": {
            "type": "object",
            "properties": {
                "duration": {
                    "type": "number",
                    "format": "float",
                    "description": "'duration' field of the current Voice"
                },
                "end time": {
                    "type": "number",
                    "format": "float",
                    "description": "'end time' field of the current Voice"
                },
                "feedback": {
                    "type": "array",
                    "description": "'feedback' field of the current Voice",
                    "items": {
                        "type": "string",
                        "description": "feedback ('feedback' represented by a unique ID)"
                    }
                },
                "feedback score": {
                    "type": "number",
                    "format": "float",
                    "description": "'feedback score' field of the current Voice"
                },
                "feedback text": {
                    "type": "string",
                    "description": "'feedback text' field of the current Voice"
                },
                "file": {
                    "type": "string",
                    "description": "'file' field of the current Voice"
                },
                "fs id": {
                    "type": "string",
                    "description": "'fs id' field of the current Voice"
                },
                "Is Deleted": {
                    "type": "boolean",
                    "description": "'Is Deleted' field of the current Voice"
                },
                "Is Edited": {
                    "type": "boolean",
                    "description": "'Is Edited' field of the current Voice"
                },
                "JSON": {
                    "type": "string",
                    "description": "'JSON' field of the current Voice"
                },
                "layout list": {
                    "type": "array",
                    "description": "'layout list' field of the current Voice",
                    "items": {
                        "type": "string",
                        "description": "visualtemplates ('visualtemplates' represented by a unique ID)"
                    }
                },
                "saved_voice": {
                    "type": "string",
                    "description": "'saved_voice' field of the current Voice ('saved_voices' represented by a unique ID)"
                },
                "scene list": {
                    "type": "array",
                    "description": "'scene list' field of the current Voice",
                    "items": {
                        "type": "string",
                        "description": "scene ('scene' represented by a unique ID)"
                    }
                },
                "Is Inserted": {
                    "type": "boolean",
                    "description": "'Is Inserted' field of the current Voice"
                },
                "start time": {
                    "type": "number",
                    "format": "float",
                    "description": "'start time' field of the current Voice"
                },
                "unedited file": {
                    "type": "string",
                    "description": "'unedited file' field of the current Voice"
                },
                "unedited voice": {
                    "type": "string",
                    "description": "'unedited voice' field of the current Voice"
                },
                "video": {
                    "type": "string",
                    "description": "'video' field of the current Voice ('video' represented by a unique ID)"
                },
                "storyboard index": {
                    "type": "number",
                    "format": "float",
                    "description": "'storyboard index' field of the current Voice"
                },
                "voice value": {
                    "type": "string",
                    "description": "'voice value' field of the current Voice"
                }
            }
        },
        "playhtlibraryBody": {
            "type": "object",
            "properties": {
                "accent": {
                    "type": "string",
                    "description": "'accent' field of the current PlayHT Library"
                },
                "age": {
                    "type": "string",
                    "description": "'age' field of the current PlayHT Library"
                },
                "gender": {
                    "type": "string",
                    "description": "'gender' field of the current PlayHT Library"
                },
                "id": {
                    "type": "string",
                    "description": "'id' field of the current PlayHT Library"
                },
                "is_cloned": {
                    "type": "boolean",
                    "description": "'is_cloned' field of the current PlayHT Library"
                },
                "language code": {
                    "type": "string",
                    "description": "'language code' field of the current PlayHT Library"
                },
                "language": {
                    "type": "string",
                    "description": "'language' field of the current PlayHT Library"
                },
                "loudness": {
                    "type": "string",
                    "description": "'loudness' field of the current PlayHT Library"
                },
                "name": {
                    "type": "string",
                    "description": "'name' field of the current PlayHT Library"
                },
                "sample": {
                    "type": "string",
                    "description": "'sample' field of the current PlayHT Library"
                },
                "style": {
                    "type": "string",
                    "description": "'style' field of the current PlayHT Library"
                },
                "tempo": {
                    "type": "string",
                    "description": "'tempo' field of the current PlayHT Library"
                },
                "texture": {
                    "type": "string",
                    "description": "'texture' field of the current PlayHT Library"
                },
                "voice_engine": {
                    "type": "string",
                    "description": "'voice_engine' field of the current PlayHT Library"
                }
            }
        }
    },
    "tags": [
        {
            "name": "Workflow",
            "description": "Use this to trigger a workflow"
        },
        {
            "name": "Data",
            "description": "Use this to fetch, modify and delete data"
        }
    ],
    "securityDefinitions": {
        "api_token": {
            "type": "apiKey",
            "name": "api_token",
            "in": "query"
        }
    },
    "security": [
        {
            "api_token": []
        }
    ]
}